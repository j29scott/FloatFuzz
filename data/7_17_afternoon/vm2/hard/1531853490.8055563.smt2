;  time  = 600
;  chars = 20
;  score = 0.9966777408637874
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.isSubnormal (fp.sub RNE (fp.abs (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.neg (fp.sub RNE (fp.mul RNE (fp.mul RNE x3 x6) x3) (fp.mul RNE (fp.add RNE x13 x6) (fp.neg x14)))) x0) (fp.abs x2)) x10)) (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.neg (fp.add RNE (fp.mul RNE (fp.abs x13) x2) (fp.sub RNE (fp.abs (fp.mul RNE x5 x13)) x7))) (fp.mul RNE (fp.neg (fp.add RNE (fp.neg (fp.add RNE x0 x2)) (fp.neg (fp.add RNE x9 x3)))) (fp.sub RNE x11 (fp.add RNE (fp.mul RNE (fp.add RNE x11 x4) (fp.abs x11)) (fp.add RNE (fp.add RNE x2 x8) (fp.add RNE x10 x13)))))) (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.add RNE (fp.abs x12) (fp.abs x11)) (fp.neg (fp.abs x10))) x11) (fp.neg x6)) x2)) (fp.neg (fp.neg (fp.neg (fp.abs x0))))))))
(check-sat)
;  time  = {'z3': 341.476, 'mathsat': 2.9932644367218018}
;  terms = 77
;  score = 338.4827355632782
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.lt (fp.sub RNE (fp.abs (fp.add RNE (fp.sub RNE (fp.abs x2) (fp.sub RNE x8 x2)) (fp.div RNE (fp.neg x2) (fp.min x4 x3)))) (fp.roundToIntegral RNE (fp.neg (fp.min (fp.add RNE x0 x9) (fp.div RNE x4 x8))))) (fp.mul RNE (fp.max (fp.div RNE (fp.max (fp.min x2 x4) (fp.mul RNE x3 x3)) (fp.div RNE (fp.sqrt RNE x6) (fp.add RNE x1 x6))) (fp.neg (fp.div RNE (fp.max x0 x9) (fp.mul RNE x4 x5)))) (fp.min (fp.mul RNE (fp.add RNE (fp.sub RNE x1 x2) (fp.mul RNE x2 x4)) (fp.abs (fp.add RNE x2 x7))) (fp.div RNE (fp.max (fp.mul RNE x1 x9) (fp.sub RNE x9 x9)) (fp.min (fp.mul RNE x4 x8) (fp.min x4 x1)))))))(check-sat)
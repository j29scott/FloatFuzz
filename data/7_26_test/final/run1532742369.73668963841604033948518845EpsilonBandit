;  time  = {'z3': 262.255, 'mathsat': 69.2136127948761}
;  terms = 72
;  score = 193.0413872051239
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.min (fp.roundToIntegral RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x8 x3) (fp.mul RNE x6 x9)) (fp.sub RNE (fp.neg x9) (fp.div RNE x9 x3)))) (fp.mul RNE (fp.min (fp.max (fp.add RNE x3 x8) (fp.neg x6)) (fp.min (fp.sqrt RNE x4) (fp.max x1 x7))) (fp.add RNE (fp.div RNE (fp.neg x2) (fp.max x9 x1)) (fp.sub RNE (fp.abs x1) (fp.add RNE x7 (fp.sub RNE x6 x9)))))) (fp.abs (fp.sub RNE (fp.abs (fp.sqrt RNE (fp.add RNE x8 x2))) (fp.mul RNE (fp.div RNE (fp.add RNE x2 (fp.div RNE x2 x4)) (fp.mul RNE x0 x7)) (fp.add RNE (fp.add RNE x8 (fp.add RNE x1 x5)) (fp.min x4 x8)))))))(check-sat)
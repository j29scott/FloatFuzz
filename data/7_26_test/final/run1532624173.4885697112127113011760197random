;  time  = {'mathsat': 11.821755409240723, 'z3': 147.062}
;  terms = 54
;  score = 135.2402445907593
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isSubnormal (fp.min (fp.mul RNE (fp.min (fp.abs (fp.sub RNE x9 x1)) (fp.sub RNE (fp.roundToIntegral RNE x0) (fp.div RNE x6 x5))) (fp.div RNE (fp.sub RNE (fp.sub RNE x8 x1) (fp.min x9 x2)) (fp.add RNE (fp.sub RNE x3 x1) (fp.neg x5)))) (fp.sub RNE (fp.mul RNE (fp.abs (fp.sqrt RNE (fp.sub RNE x3 x1))) (fp.div RNE (fp.abs (fp.mul RNE x3 x3)) (fp.add RNE (fp.max x6 x0) (fp.mul RNE x0 x9)))) (fp.neg (fp.neg (fp.sub RNE (fp.sqrt RNE x8) (fp.neg x2))))))))(check-sat)
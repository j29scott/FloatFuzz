;  time  = {'mathsat': 60.153684854507446, 'z3': 523.46}
;  terms = 103
;  score = 463.3063151454926
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.min (fp.add RNE (fp.div RNE (fp.abs (fp.min x8 x7)) (fp.add RNE (fp.roundToIntegral RNE x0) (fp.neg x3))) (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x4 x2) (fp.add RNE x1 x8)) (fp.div RNE (fp.sqrt RNE x9) (fp.max x6 x7))) (fp.mul RNE (fp.roundToIntegral RNE (fp.min x2 x1)) (fp.sub RNE (fp.roundToIntegral RNE x5) (fp.add RNE x2 x9))))) (fp.max (fp.sqrt RNE (fp.add RNE (fp.roundToIntegral RNE x5) (fp.add RNE (fp.max x1 x9) (fp.add RNE x0 x6)))) (fp.add RNE (fp.add RNE (fp.min x9 x8) (fp.max x7 x6)) (fp.sqrt RNE (fp.max x3 x7))))) (fp.sub RNE (fp.sqrt RNE (fp.neg (fp.abs (fp.div RNE x6 x3)))) (fp.div RNE (fp.add RNE (fp.mul RNE (fp.add RNE x3 x7) (fp.add RNE x0 (fp.add RNE x4 x1))) (fp.add RNE (fp.abs x5) (fp.add RNE x9 (fp.mul RNE x3 x1)))) (fp.add RNE (fp.div RNE (fp.add RNE x7 x8) (fp.neg x9)) (fp.mul RNE (fp.add RNE x6 x0) (fp.sub RNE x9 x1)))))))(check-sat)
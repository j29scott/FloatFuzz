;  time  = {'mathsat': 45.76475811004639, 'z3': 495.665}
;  terms = 109
;  score = 449.90024188995363
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.mul RNE (fp.min (fp.abs (fp.roundToIntegral RNE (fp.min x2 x2))) (fp.sub RNE (fp.roundToIntegral RNE (fp.mul RNE x0 x6)) (fp.div RNE (fp.div RNE x9 x5) (fp.mul RNE (fp.sub RNE x4 x1) (fp.add RNE x7 x6))))) (fp.max (fp.max (fp.div RNE (fp.min x8 x7) (fp.mul RNE x8 x8)) (fp.neg (fp.div RNE x9 x6))) (fp.mul RNE (fp.roundToIntegral RNE (fp.max x5 x5)) (fp.abs (fp.div RNE x8 x3))))) (fp.div RNE (fp.add RNE (fp.add RNE (fp.div RNE (fp.mul RNE x9 (fp.max x2 x7)) (fp.sqrt RNE (fp.sqrt RNE x6))) (fp.mul RNE (fp.mul RNE (fp.add RNE x3 x7) (fp.min x5 x3)) (fp.div RNE (fp.mul RNE x6 x1) (fp.min x8 x5)))) (fp.min (fp.mul RNE (fp.sqrt RNE (fp.sqrt RNE x7)) (fp.add RNE (fp.sqrt RNE x3) (fp.div RNE x3 x8))) (fp.abs (fp.abs (fp.div RNE x0 x2))))) (fp.mul RNE (fp.max (fp.max (fp.div RNE x3 x1) (fp.div RNE x5 x3)) (fp.sqrt RNE (fp.mul RNE x0 (fp.mul RNE x5 x4)))) (fp.sqrt RNE (fp.abs (fp.max x8 x3)))))))(check-sat)
;  time  = {'mathsat': 17.847558975219727, 'z3': 380.337}
;  terms = 80
;  score = 362.48944102478026
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.div RNE (fp.min (fp.div RNE (fp.neg (fp.add RNE x0 x2)) (fp.add RNE (fp.min x2 x3) (fp.mul RNE x2 (fp.sqrt RNE x4)))) (fp.mul RNE (fp.sub RNE (fp.sqrt RNE x2) (fp.mul RNE x5 x3)) (fp.div RNE (fp.div RNE x4 x8) (fp.sqrt RNE x4)))) (fp.roundToIntegral RNE (fp.sqrt RNE (fp.mul RNE (fp.abs x2) (fp.div RNE x0 (fp.abs x0)))))) (fp.add RNE (fp.neg (fp.sub RNE (fp.sqrt RNE (fp.abs x9)) (fp.abs (fp.div RNE (fp.roundToIntegral RNE x7) (fp.mul RNE x7 x4))))) (fp.sub RNE (fp.max (fp.mul RNE (fp.sqrt RNE (fp.add RNE x8 x9)) (fp.sqrt RNE (fp.neg x5))) (fp.neg (fp.mul RNE (fp.sqrt RNE x7) (fp.mul RNE x8 x0)))) (fp.sqrt RNE (fp.max (fp.add RNE (fp.neg x2) (fp.sub RNE x4 x1)) (fp.sqrt RNE (fp.mul RNE x9 x7))))))))(check-sat)
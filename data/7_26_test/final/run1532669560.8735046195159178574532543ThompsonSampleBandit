;  time  = {'mathsat': 16.279242038726807, 'z3': 493.378}
;  terms = 88
;  score = 477.0987579612732
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isNegative (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.min x7 x5) (fp.mul RNE (fp.sub RNE x0 x3) (fp.sub RNE x4 x1))) (fp.mul RNE (fp.mul RNE x1 x1) (fp.mul RNE x4 x9))) (fp.div RNE (fp.div RNE (fp.div RNE (fp.div RNE x3 x8) (fp.mul RNE x0 x4)) (fp.sub RNE (fp.mul RNE x2 x7) (fp.sub RNE x3 x6))) (fp.sub RNE (fp.div RNE (fp.sub RNE x7 x2) (fp.div RNE x8 x4)) (fp.sub RNE (fp.sub RNE x1 x3) (fp.roundToIntegral RNE x4))))) (fp.sub RNE (fp.roundToIntegral RNE (fp.mul RNE (fp.mul RNE x2 x5) (fp.sub RNE (fp.mul RNE x3 x6) (fp.max x7 x0)))) (fp.div RNE (fp.mul RNE (fp.min (fp.mul RNE x9 x2) (fp.sqrt RNE x5)) (fp.mul RNE (fp.min x1 x9) (fp.div RNE x1 x2))) (fp.sub RNE (fp.abs (fp.abs x2)) (fp.sqrt RNE (fp.div RNE x4 x1))))))))(check-sat)
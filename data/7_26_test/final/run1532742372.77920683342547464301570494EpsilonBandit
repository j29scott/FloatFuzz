;  time  = {'z3': 427.646, 'mathsat': 124.99381303787231}
;  terms = 86
;  score = 302.6521869621277
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isZero (fp.div RNE (fp.add RNE (fp.add RNE (fp.add RNE (fp.add RNE x9 (fp.sub RNE x5 x2)) (fp.div RNE (fp.mul RNE x8 x8) (fp.max x1 x9))) (fp.add RNE (fp.add RNE (fp.sqrt RNE x8) (fp.add RNE x9 x3)) (fp.roundToIntegral RNE (fp.add RNE x0 x2)))) (fp.add RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x0 x7) (fp.add RNE x8 x8)) (fp.div RNE (fp.roundToIntegral RNE x2) (fp.add RNE x3 x6))) (fp.neg (fp.add RNE (fp.add RNE x0 x1) (fp.min x6 x8))))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.div RNE x8 x9) (fp.add RNE x7 x0)) (fp.add RNE (fp.add RNE x8 x3) (fp.neg x5))) (fp.add RNE (fp.sqrt RNE (fp.neg (fp.add RNE x2 x4))) (fp.mul RNE (fp.add RNE (fp.div RNE x0 x4) (fp.div RNE x1 x9)) (fp.min (fp.sqrt RNE x8) (fp.mul RNE x5 x8))))))))(check-sat)
;  time  = {'z3': 339.291, 'mathsat': 52.188467502593994}
;  terms = 55
;  score = 287.102532497406
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.leq (fp.sqrt RNE (fp.div RNE (fp.add RNE (fp.div RNE (fp.sqrt RNE x4) (fp.sqrt RNE x9)) (fp.div RNE (fp.neg x2) (fp.add RNE x7 x3))) (fp.sub RNE (fp.min (fp.sqrt RNE x0) (fp.sqrt RNE (fp.mul RNE x4 x3))) (fp.min (fp.abs (fp.add RNE x3 x1)) (fp.abs (fp.roundToIntegral RNE x8)))))) (fp.sqrt RNE (fp.min (fp.sub RNE (fp.max (fp.div RNE x9 x6) (fp.abs x5)) (fp.abs (fp.abs x3))) (fp.min (fp.sqrt RNE (fp.min x3 x8)) (fp.div RNE (fp.max x8 x0) (fp.mul RNE x2 x0)))))))(check-sat)
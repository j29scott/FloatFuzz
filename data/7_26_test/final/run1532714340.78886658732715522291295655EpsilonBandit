;  time  = {'z3': 219.844, 'mathsat': 8.293338537216187}
;  terms = 71
;  score = 211.5506614627838
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isNormal (fp.add RNE (fp.sub RNE (fp.add RNE (fp.add RNE (fp.add RNE x3 (fp.neg x2)) (fp.add RNE x7 (fp.min x1 x9))) (fp.add RNE (fp.add RNE x4 x9) (fp.div RNE (fp.max x7 x4) (fp.div RNE x1 x5)))) (fp.neg (fp.add RNE (fp.div RNE x2 x1) (fp.sub RNE (fp.abs x8) (fp.abs x0))))) (fp.add RNE (fp.min (fp.abs (fp.div RNE x4 x9)) (fp.add RNE (fp.div RNE x1 x4) (fp.add RNE x4 x6))) (fp.add RNE (fp.add RNE (fp.mul RNE (fp.add RNE x8 x5) (fp.roundToIntegral RNE x7)) (fp.mul RNE (fp.add RNE x6 x4) (fp.div RNE x2 x5))) (fp.roundToIntegral RNE (fp.div RNE (fp.div RNE x0 x3) (fp.add RNE x1 x3))))))))(check-sat)
;  time  = {'mathsat': 23.057857036590576, 'z3': 104.886}
;  terms = 62
;  score = 81.82814296340942
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isSubnormal (fp.sub RNE (fp.min (fp.add RNE (fp.max (fp.roundToIntegral RNE x3) (fp.add RNE x7 x1)) (fp.min (fp.mul RNE (fp.max x7 x7) (fp.mul RNE x8 x1)) (fp.sqrt RNE (fp.sqrt RNE x3)))) (fp.min (fp.abs (fp.roundToIntegral RNE x4)) (fp.sub RNE (fp.abs x7) (fp.abs x8)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.div RNE x9 x1) (fp.div RNE (fp.mul RNE x8 x5) (fp.max x8 x8))) (fp.sub RNE (fp.sqrt RNE x5) (fp.sub RNE x6 x0))) (fp.max (fp.max (fp.max x9 x4) (fp.min x5 x0)) (fp.mul RNE (fp.neg x1) (fp.abs x2)))))))(check-sat)
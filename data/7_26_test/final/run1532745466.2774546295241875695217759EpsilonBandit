;  time  = {'mathsat': 32.7457160949707, 'z3': 257.476}
;  terms = 58
;  score = 224.7302839050293
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isSubnormal (fp.add RNE (fp.add RNE (fp.div RNE (fp.add RNE (fp.div RNE x0 x1) (fp.add RNE x8 x2)) (fp.add RNE (fp.add RNE x5 x7) (fp.add RNE (fp.sqrt RNE x2) (fp.min x1 x1)))) (fp.min (fp.add RNE (fp.min (fp.roundToIntegral RNE x4) (fp.sqrt RNE x3)) (fp.div RNE (fp.div RNE x4 x8) (fp.neg x3))) (fp.roundToIntegral RNE (fp.sub RNE (fp.max x4 x8) (fp.div RNE x6 x1))))) (fp.sqrt RNE (fp.add RNE (fp.add RNE (fp.add RNE x0 x5) (fp.mul RNE x5 x6)) (fp.sqrt RNE (fp.add RNE (fp.roundToIntegral RNE x8) (fp.add RNE x3 x0))))))))(check-sat)
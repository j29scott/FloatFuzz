;  time  = {'z3': 143.205, 'mathsat': 3.0482354164123535}
;  terms = 118
;  score = 140.15676458358766
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.leq (fp.add RNE (fp.max (fp.mul RNE (fp.max (fp.min x3 x9) (fp.abs x1)) (fp.sqrt RNE (fp.mul RNE x3 x6))) (fp.roundToIntegral RNE (fp.max (fp.roundToIntegral RNE x8) (fp.abs x6)))) (fp.add RNE (fp.min (fp.sub RNE (fp.sub RNE (fp.add RNE x5 x8) (fp.neg x5)) (fp.roundToIntegral RNE (fp.sqrt RNE x1))) (fp.mul RNE (fp.sqrt RNE (fp.add RNE x9 x3)) (fp.neg (fp.add RNE x3 x4)))) (fp.max (fp.add RNE (fp.neg (fp.add RNE x1 x4)) (fp.abs (fp.add RNE x7 x4))) (fp.max (fp.min (fp.neg x8) (fp.abs x4)) (fp.add RNE (fp.min x7 x8) (fp.mul RNE x6 x9)))))) (fp.mul RNE (fp.add RNE (fp.add RNE (fp.add RNE (fp.add RNE x6 (fp.mul RNE x3 x0)) (fp.sqrt RNE (fp.neg x6))) (fp.sqrt RNE (fp.add RNE x1 x5))) (fp.abs (fp.abs (fp.neg x3)))) (fp.min (fp.div RNE (fp.add RNE (fp.add RNE x3 x5) (fp.neg (fp.div RNE x6 x9))) (fp.max (fp.neg x3) (fp.min x0 x7))) (fp.add RNE (fp.add RNE (fp.abs x5) (fp.mul RNE (fp.div RNE x6 x5) (fp.max x3 x2))) (fp.add RNE (fp.add RNE x7 x5) (fp.add RNE x5 x7)))))))(check-sat)
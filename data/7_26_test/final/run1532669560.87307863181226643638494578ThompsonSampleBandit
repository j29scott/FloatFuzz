;  time  = {'z3': 600, 'mathsat': 1.8879635334014893}
;  terms = 73
;  score = 598.1120364665985
;  stdout= {'z3': 'timeout\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.sqrt RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE x7 (fp.sqrt RNE x3)) (fp.sub RNE x6 x4)) (fp.div RNE (fp.neg (fp.sub RNE x7 x5)) (fp.neg (fp.abs x5)))) (fp.sub RNE (fp.max (fp.add RNE (fp.add RNE x0 x3) (fp.mul RNE x5 x3)) (fp.sqrt RNE (fp.sqrt RNE x5))) (fp.div RNE (fp.neg (fp.add RNE x4 x7)) (fp.sub RNE (fp.min x7 x6) (fp.mul RNE x9 x7)))))) (fp.abs (fp.mul RNE (fp.sqrt RNE (fp.sub RNE (fp.sub RNE x4 (fp.mul RNE x4 x8)) (fp.sub RNE (fp.sub RNE x9 x0) (fp.neg x1)))) (fp.sub RNE (fp.sqrt RNE (fp.mul RNE x1 (fp.min x1 x1))) (fp.sqrt RNE (fp.min (fp.sqrt RNE x6) (fp.sub RNE x6 x5))))))))(check-sat)
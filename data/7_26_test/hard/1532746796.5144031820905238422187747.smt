;  time  = {'mathsat': 19.32093620300293, 'z3': 600}
;  terms = 67
;  score = 580.6790637969971
;  stdout= {'mathsat': 'sat', 'z3': 'timeout\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isNegative (fp.sub RNE (fp.max (fp.div RNE (fp.div RNE (fp.div RNE x7 x8) (fp.add RNE x0 x8)) (fp.max (fp.neg x4) (fp.mul RNE x7 x5))) (fp.mul RNE (fp.div RNE (fp.add RNE x9 x7) (fp.sqrt RNE x7)) (fp.min (fp.roundToIntegral RNE x0) (fp.max x3 x9)))) (fp.div RNE (fp.mul RNE (fp.sqrt RNE (fp.div RNE x4 x1)) (fp.div RNE (fp.sub RNE x1 x2) (fp.abs (fp.max x3 x1)))) (fp.add RNE (fp.abs (fp.max (fp.div RNE x6 x6) (fp.div RNE x0 x4))) (fp.mul RNE (fp.div RNE (fp.mul RNE x6 x5) (fp.div RNE x7 x3)) (fp.div RNE (fp.roundToIntegral RNE x4) (fp.div RNE x3 x6))))))))(check-sat)
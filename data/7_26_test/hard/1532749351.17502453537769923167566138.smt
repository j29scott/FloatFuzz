;  time  = {'mathsat': 14.01051378250122, 'z3': 600}
;  terms = 66
;  score = 585.9894862174988
;  stdout= {'mathsat': 'sat', 'z3': 'timeout\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isNegative (fp.div RNE (fp.div RNE (fp.div RNE (fp.neg (fp.max x5 x0)) (fp.abs (fp.div RNE (fp.abs x7) (fp.min x4 x1)))) (fp.max (fp.div RNE (fp.div RNE x4 x1) (fp.abs x9)) (fp.abs (fp.div RNE x1 x8)))) (fp.div RNE (fp.sqrt RNE (fp.div RNE (fp.sub RNE (fp.sqrt RNE x4) (fp.div RNE x0 x3)) (fp.div RNE (fp.div RNE x4 x6) (fp.max x9 x5)))) (fp.sub RNE (fp.max (fp.max (fp.div RNE x8 x9) (fp.neg x6)) (fp.div RNE (fp.roundToIntegral RNE x7) (fp.neg x1))) (fp.min (fp.div RNE (fp.roundToIntegral RNE x8) (fp.max x7 x6)) (fp.sqrt RNE (fp.div RNE x9 x4))))))))(check-sat)
;  time  = {'z3': 600, 'mathsat': 44.4553918838501}
;  terms = 63
;  score = 555.5446081161499
;  stdout= {'z3': 'timeout\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isZero (fp.div RNE (fp.sub RNE (fp.div RNE (fp.div RNE (fp.roundToIntegral RNE x2) (fp.add RNE x5 x2)) (fp.min (fp.sub RNE (fp.sub RNE x7 x8) (fp.abs x2)) (fp.add RNE (fp.abs x8) (fp.max x7 x4)))) (fp.div RNE (fp.div RNE (fp.div RNE x1 (fp.div RNE x2 x1)) (fp.mul RNE (fp.neg x1) (fp.sub RNE x3 x9))) (fp.sub RNE (fp.sqrt RNE x1) (fp.div RNE x9 (fp.abs x9))))) (fp.min (fp.abs (fp.div RNE (fp.div RNE x8 x9) (fp.div RNE x3 x2))) (fp.div RNE (fp.neg (fp.add RNE x4 x1)) (fp.div RNE (fp.sqrt RNE x3) (fp.div RNE x4 x4)))))))(check-sat)
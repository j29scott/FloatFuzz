;  time  = {'mathsat': 131.50357484817505, 'z3': 600}
;  terms = 73
;  score = 468.49642515182495
;  stdout= {'mathsat': 'sat', 'z3': 'timeout\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.add RNE (fp.abs (fp.neg (fp.roundToIntegral RNE (fp.min x6 x7)))) (fp.sub RNE (fp.max (fp.add RNE (fp.mul RNE x6 x1) (fp.add RNE x5 x9)) (fp.add RNE (fp.abs x9) (fp.div RNE (fp.div RNE x2 x4) (fp.abs x0)))) (fp.roundToIntegral RNE (fp.div RNE (fp.sub RNE x2 x5) (fp.min x7 x4))))) (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.abs (fp.max x6 x9)) (fp.div RNE (fp.min x0 x7) (fp.abs x1))) (fp.mul RNE (fp.roundToIntegral RNE (fp.abs x6)) (fp.mul RNE (fp.abs x7) (fp.sub RNE (fp.sqrt RNE x2) (fp.abs x2))))) (fp.sub RNE (fp.sqrt RNE (fp.sqrt RNE (fp.max x3 x0))) (fp.div RNE (fp.sqrt RNE (fp.mul RNE x7 x2)) (fp.sqrt RNE (fp.sqrt RNE x9)))))))(check-sat)
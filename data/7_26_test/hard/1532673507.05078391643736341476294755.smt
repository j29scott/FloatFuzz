;  time  = {'mathsat': 80.27649307250977, 'z3': 600}
;  terms = 77
;  score = 519.7235069274902
;  stdout= {'mathsat': 'sat', 'z3': 'timeout\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isSubnormal (fp.add RNE (fp.div RNE (fp.mul RNE (fp.add RNE (fp.roundToIntegral RNE x8) (fp.div RNE x0 x5)) (fp.roundToIntegral RNE (fp.add RNE (fp.sub RNE x7 x6) (fp.add RNE x5 x9)))) (fp.mul RNE (fp.add RNE (fp.neg x8) (fp.add RNE x7 x5)) (fp.min (fp.sqrt RNE (fp.add RNE x3 x9)) (fp.mul RNE (fp.add RNE x2 x8) (fp.sub RNE x7 x8))))) (fp.add RNE (fp.min (fp.div RNE (fp.add RNE (fp.add RNE x0 x3) (fp.sub RNE x4 x7)) (fp.mul RNE (fp.sqrt RNE x2) (fp.mul RNE x7 x9))) (fp.sqrt RNE (fp.add RNE (fp.add RNE x0 x3) (fp.add RNE x3 x8)))) (fp.sqrt RNE (fp.mul RNE (fp.min (fp.div RNE x2 x4) (fp.mul RNE x0 x5)) (fp.sub RNE (fp.mul RNE x5 x8) (fp.max x1 x2))))))))(check-sat)
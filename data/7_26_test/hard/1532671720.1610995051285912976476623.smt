;  time  = {'mathsat': 76.68709588050842, 'z3': 600}
;  terms = 55
;  score = 523.3129041194916
;  stdout= {'mathsat': 'sat', 'z3': 'timeout\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isNormal (fp.mul RNE (fp.mul RNE (fp.neg (fp.mul RNE (fp.mul RNE x6 x6) (fp.mul RNE x9 (fp.div RNE x3 x1)))) (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.sqrt RNE x7) (fp.neg x2)) (fp.max (fp.sub RNE x5 x9) (fp.div RNE x3 x3))) (fp.mul RNE (fp.abs (fp.max x0 x8)) (fp.roundToIntegral RNE (fp.abs x2))))) (fp.neg (fp.div RNE (fp.mul RNE (fp.mul RNE x6 (fp.mul RNE x7 x4)) (fp.min (fp.sub RNE x9 x0) (fp.roundToIntegral RNE x1))) (fp.mul RNE (fp.neg x9) (fp.sub RNE x2 x5)))))))(check-sat)
;  time  = 600
;  chars = 28
;  score = 0.9956460892551703
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.isSubnormal (fp.abs (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE x3 (fp.mul RNE (fp.abs x8) (fp.mul RNE x10 (fp.sub RNE x14 x9)))) (fp.neg (fp.neg x14))) (fp.neg (fp.mul RNE x4 (fp.add RNE x13 x1)))) (fp.neg (fp.abs (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.abs x8) (fp.abs x14)) x4) (fp.add RNE x7 (fp.add RNE (fp.add RNE x7 x4) x7)))))) (fp.abs (fp.mul RNE (fp.sub RNE (fp.neg (fp.add RNE (fp.mul RNE (fp.mul RNE x0 x5) (fp.add RNE x7 x13)) (fp.mul RNE (fp.mul RNE x10 x10) (fp.abs x1)))) (fp.abs (fp.abs x8))) (fp.sub RNE (fp.abs (fp.mul RNE (fp.add RNE (fp.abs x1) (fp.add RNE x14 x6)) x0)) (fp.add RNE (fp.abs (fp.mul RNE (fp.add RNE x2 x14) x9)) (fp.neg (fp.add RNE (fp.abs x11) x13))))))))))
(check-sat)
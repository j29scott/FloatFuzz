;  time  = 600
;  chars = 153
;  score = 0.9741466711726935
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.isNormal (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.abs (fp.add RNE (fp.sub RNE (fp.sub RNE x3 (fp.mul RNE (fp.add RNE x13 x13) (fp.mul RNE x12 x0))) x1) (fp.add RNE (fp.neg (fp.add RNE (fp.mul RNE x7 x7) (fp.sub RNE x1 x13))) (fp.mul RNE (fp.add RNE x8 (fp.neg x7)) x12)))) (fp.mul RNE (fp.mul RNE (fp.neg x8) (fp.neg (fp.abs (fp.neg (fp.add RNE x2 x12))))) (fp.mul RNE (fp.mul RNE x6 (fp.abs (fp.neg (fp.mul RNE x1 x12)))) (fp.add RNE (fp.abs x1) (fp.sub RNE (fp.abs x11) (fp.neg x14)))))) (fp.add RNE (fp.abs (fp.mul RNE x8 (fp.neg (fp.neg x14)))) (fp.add RNE (fp.add RNE (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x1 x6) (fp.sub RNE x12 x11)) (fp.mul RNE x2 (fp.abs x5))) (fp.add RNE (fp.abs (fp.neg x13)) (fp.add RNE (fp.sub RNE x12 x2) (fp.abs x2)))) x1) (fp.abs (fp.add RNE (fp.add RNE x12 (fp.sub RNE (fp.mul RNE x6 x6) (fp.neg x12))) x3))))) (fp.mul RNE x8 (fp.sub RNE (fp.sub RNE x7 x1) (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.neg (fp.neg (fp.abs x4))) (fp.add RNE (fp.add RNE (fp.mul RNE x2 x9) (fp.neg x5)) (fp.mul RNE (fp.mul RNE x14 x6) (fp.neg x11)))) (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x9 x2) x6) (fp.sub RNE (fp.neg x14) x11)) x10)) (fp.add RNE (fp.mul RNE x13 (fp.abs (fp.neg x10))) x12)))))))
(check-sat)
;  time  = 600
;  chars = 1286
;  score = 0.8000310993624631
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.isSubnormal (fp.sub RNE (fp.sub RNE (fp.mul RNE (fp.neg (fp.mul RNE (fp.add RNE x12 (fp.abs x1)) (fp.abs x10))) (fp.neg x14)) (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.abs x5) (fp.add RNE (fp.add RNE (fp.mul RNE x4 x13) (fp.sub RNE x3 x3)) (fp.sub RNE (fp.add RNE x0 x3) x13))) x12) (fp.sub RNE (fp.add RNE (fp.sub RNE x4 (fp.sub RNE (fp.neg x8) x8)) (fp.abs (fp.neg (fp.mul RNE x0 x6)))) x3)) (fp.mul RNE (fp.sub RNE (fp.add RNE x9 (fp.add RNE (fp.neg (fp.neg x2)) (fp.mul RNE (fp.mul RNE x7 x6) (fp.abs x8)))) x12) x12))) (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.add RNE x13 x11) (fp.mul RNE x8 x6)) (fp.sub RNE (fp.mul RNE x14 x14) (fp.abs x9))) (fp.add RNE (fp.neg (fp.add RNE x12 x10)) (fp.add RNE (fp.add RNE x6 x6) (fp.mul RNE x10 x2)))) (fp.abs (fp.add RNE x7 x13))) (fp.sub RNE (fp.neg (fp.sub RNE (fp.mul RNE x4 (fp.sub RNE x9 x11)) (fp.add RNE (fp.abs x14) x10))) (fp.add RNE (fp.add RNE (fp.abs (fp.add RNE x5 x10)) x1) x8))) (fp.add RNE (fp.neg (fp.abs (fp.abs x1))) (fp.sub RNE (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x5 x13) x12) (fp.neg (fp.sub RNE x0 x6))) (fp.neg (fp.mul RNE (fp.sub RNE x11 x13) x13))) (fp.abs (fp.sub RNE (fp.mul RNE (fp.add RNE x4 x8) (fp.sub RNE x9 x10)) (fp.abs x4)))))) x11))))
(check-sat)
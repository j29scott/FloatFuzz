;  time  = {'z3': 600, 'mathsat': 20.014084100723267}
;  terms = 58
;  score = 579.9859158992767
;  stdout= {'z3': 'timeout\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isSubnormal (fp.div RNE (fp.min (fp.roundToIntegral RNE (fp.abs (fp.sqrt RNE x9))) (fp.min (fp.abs (fp.min (fp.min x6 x6) (fp.abs x0))) (fp.max (fp.sub RNE (fp.abs x0) (fp.sub RNE x0 x2)) (fp.sub RNE (fp.mul RNE x1 x0) (fp.max x9 x8))))) (fp.mul RNE (fp.div RNE (fp.div RNE (fp.add RNE x4 x0) (fp.mul RNE x7 x4)) (fp.mul RNE (fp.mul RNE x8 x5) (fp.mul RNE x2 x4))) (fp.sub RNE (fp.max (fp.min x0 x5) (fp.sqrt RNE x6)) (fp.mul RNE (fp.sqrt RNE x6) (fp.min x6 x5)))))))(check-sat)
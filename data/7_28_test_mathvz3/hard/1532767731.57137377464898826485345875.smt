;  time  = {'mathsat': 176.73215341567993, 'z3': 600}
;  terms = 79
;  score = 423.26784658432007
;  stdout= {'mathsat': 'sat', 'z3': 'timeout\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isZero (fp.min (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.min x4 x5) (fp.div RNE x5 (fp.min x1 x6))) (fp.abs (fp.add RNE x8 x4))) (fp.div RNE (fp.min (fp.mul RNE x8 (fp.div RNE x5 x7)) (fp.mul RNE (fp.div RNE x0 x5) (fp.sub RNE x2 x6))) (fp.mul RNE (fp.div RNE (fp.abs x7) (fp.min x3 x2)) (fp.abs (fp.abs x2))))) (fp.div RNE (fp.max (fp.mul RNE (fp.div RNE x2 x4) (fp.mul RNE x3 (fp.mul RNE x7 x3))) (fp.mul RNE (fp.div RNE x6 x3) (fp.div RNE x2 (fp.mul RNE x7 x8)))) (fp.max (fp.div RNE (fp.mul RNE x4 x9) (fp.abs x9)) (fp.mul RNE (fp.mul RNE x7 (fp.sub RNE x1 x4)) (fp.min x0 (fp.mul RNE x9 x9))))))))(check-sat)
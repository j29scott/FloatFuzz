;  time  = {'z3': 544.538, 'mathsat': 4.886570692062378}
;  terms = 66
;  score = 539.6514293079376
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.neg (fp.min (fp.sqrt RNE (fp.div RNE (fp.sqrt RNE x3) (fp.abs x8))) (fp.max (fp.div RNE (fp.mul RNE x7 x3) (fp.sqrt RNE x5)) (fp.roundToIntegral RNE (fp.neg x9))))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.div RNE (fp.min x4 x1) (fp.min x2 x4)) (fp.mul RNE (fp.neg x0) (fp.add RNE x0 x1))) (fp.max (fp.sub RNE (fp.div RNE x0 x7) (fp.sqrt RNE x5)) (fp.div RNE (fp.min x7 x4) (fp.roundToIntegral RNE x7)))) (fp.mul RNE (fp.min (fp.mul RNE (fp.add RNE x5 x8) (fp.min x9 x2)) (fp.abs (fp.sub RNE x5 x5))) (fp.roundToIntegral RNE (fp.neg (fp.div RNE x6 x5)))))))(check-sat)
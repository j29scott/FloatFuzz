;  time  = {'mathsat': 98.7227213382721, 'z3': 555.058}
;  terms = 117
;  score = 456.3352786617279
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.sqrt RNE (fp.mul RNE x9 x8)) (fp.mul RNE (fp.roundToIntegral RNE x2) (fp.div RNE x4 x3))) (fp.abs (fp.sqrt RNE (fp.add RNE x4 x3)))) (fp.neg (fp.abs (fp.mul RNE (fp.min (fp.min x2 x3) (fp.div RNE x4 x1)) (fp.mul RNE (fp.div RNE x6 x6) (fp.roundToIntegral RNE x8)))))) (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.div RNE x7 x3) (fp.mul RNE (fp.div RNE x4 x6) (fp.mul RNE x8 x2))) (fp.div RNE (fp.min (fp.abs x7) (fp.mul RNE x3 x9)) (fp.min (fp.mul RNE x3 x7) (fp.sqrt RNE x5)))) (fp.max (fp.max (fp.abs (fp.max x5 x3)) (fp.max (fp.mul RNE x1 x0) (fp.add RNE x9 x2))) (fp.abs (fp.neg (fp.neg x3))))) (fp.mul RNE (fp.mul RNE (fp.sqrt RNE (fp.neg x4)) (fp.add RNE (fp.abs x0) (fp.div RNE x0 x1))) (fp.max (fp.add RNE (fp.add RNE (fp.mul RNE x3 x2) (fp.mul RNE x5 x4)) (fp.neg (fp.sqrt RNE x1))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x2 x8) (fp.mul RNE x6 x8)) (fp.mul RNE (fp.mul RNE x6 x6) (fp.min x9 x2))))))))(check-sat)
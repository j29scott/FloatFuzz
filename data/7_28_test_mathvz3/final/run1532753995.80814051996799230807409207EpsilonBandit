;  time  = {'mathsat': 36.60185670852661, 'z3': 360.456}
;  terms = 65
;  score = 323.8541432914734
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.abs (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.min x0 x5) (fp.max x3 x5)) (fp.min (fp.min x2 x6) (fp.add RNE x3 x8))) (fp.neg (fp.div RNE (fp.mul RNE x3 x6) (fp.neg x2))))) (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.sqrt RNE (fp.mul RNE x5 x6)) (fp.sqrt RNE (fp.max x7 x4))) (fp.mul RNE (fp.max (fp.sqrt RNE x2) (fp.div RNE x6 x5)) (fp.abs (fp.add RNE x4 x4)))) (fp.max (fp.mul RNE (fp.neg (fp.mul RNE x3 x1)) (fp.sqrt RNE (fp.div RNE x9 x2))) (fp.add RNE (fp.abs (fp.div RNE x0 x9)) (fp.sqrt RNE (fp.neg x4)))))))(check-sat)
;  time  = {'z3': 309.522, 'mathsat': 1.9127964973449707}
;  terms = 52
;  score = 307.609203502655
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isNegative (fp.add RNE (fp.abs (fp.sqrt RNE (fp.max (fp.add RNE x6 x1) (fp.abs x6)))) (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.min x8 (fp.mul RNE x3 x4)) (fp.mul RNE x5 x5)) (fp.neg (fp.sqrt RNE x0))) (fp.add RNE (fp.div RNE (fp.mul RNE (fp.max x7 x9) (fp.mul RNE x3 x0)) (fp.sub RNE (fp.sqrt RNE x6) (fp.div RNE x6 x7))) (fp.add RNE (fp.add RNE (fp.neg x4) (fp.div RNE x9 x2)) (fp.sub RNE (fp.mul RNE x8 x4) (fp.abs x8))))))))(check-sat)
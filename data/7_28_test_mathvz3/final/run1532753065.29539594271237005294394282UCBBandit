;  time  = {'mathsat': 9.435142040252686, 'z3': 170.278}
;  terms = 60
;  score = 160.8428579597473
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.mul RNE (fp.roundToIntegral RNE (fp.add RNE (fp.neg (fp.add RNE x7 x3)) (fp.sub RNE (fp.div RNE x5 x5) (fp.max x7 x6)))) (fp.mul RNE (fp.roundToIntegral RNE (fp.mul RNE (fp.abs x8) (fp.abs x3))) (fp.min (fp.add RNE (fp.max x4 x8) (fp.div RNE x1 x3)) (fp.mul RNE (fp.abs x6) (fp.abs x1))))) (fp.roundToIntegral RNE (fp.add RNE (fp.mul RNE (fp.abs (fp.abs x4)) (fp.neg (fp.min x0 x3))) (fp.max (fp.sub RNE (fp.mul RNE x5 x5) (fp.div RNE x1 x5)) (fp.mul RNE (fp.mul RNE x4 x1) (fp.max x5 x2)))))))(check-sat)
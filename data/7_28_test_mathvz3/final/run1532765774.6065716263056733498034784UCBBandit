;  time  = {'z3': 183.912, 'mathsat': 2.513969898223877}
;  terms = 68
;  score = 181.39803010177613
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.lt (fp.min (fp.mul RNE (fp.abs (fp.mul RNE (fp.add RNE x8 x7) (fp.abs x2))) (fp.abs (fp.div RNE (fp.div RNE x0 x3) (fp.div RNE x7 x2)))) (fp.mul RNE (fp.roundToIntegral RNE (fp.abs (fp.add RNE x9 x0))) (fp.neg (fp.sub RNE (fp.div RNE x5 x6) (fp.abs x1))))) (fp.mul RNE (fp.sub RNE (fp.neg (fp.max (fp.min x0 x0) (fp.div RNE x5 x7))) (fp.add RNE (fp.add RNE (fp.add RNE x2 x3) (fp.abs x2)) (fp.abs (fp.min x1 x2)))) (fp.mul RNE (fp.sub RNE (fp.roundToIntegral RNE (fp.mul RNE x7 x4)) (fp.div RNE (fp.sub RNE x9 x4) (fp.abs x5))) (fp.neg (fp.neg (fp.neg x3)))))))(check-sat)
;  time  = {'z3': 357.313, 'mathsat': 4.853257656097412}
;  terms = 55
;  score = 352.4597423439026
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.sqrt RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.div RNE x2 x6) (fp.abs x8)) (fp.mul RNE (fp.neg x5) (fp.abs (fp.abs x6)))) (fp.sub RNE (fp.abs (fp.sqrt RNE x5)) (fp.abs (fp.neg x5))))) (fp.mul RNE (fp.add RNE (fp.sqrt RNE (fp.mul RNE (fp.mul RNE x1 x9) (fp.neg x3))) (fp.add RNE (fp.sqrt RNE (fp.max x8 x5)) (fp.abs (fp.roundToIntegral RNE x1)))) (fp.abs (fp.mul RNE (fp.neg (fp.mul RNE x8 x3)) (fp.sub RNE (fp.neg (fp.sub RNE x0 x4)) (fp.abs (fp.max x0 x1))))))))(check-sat)
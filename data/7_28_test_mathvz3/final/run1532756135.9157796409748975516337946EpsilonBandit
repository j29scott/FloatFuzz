;  time  = {'mathsat': 2.0394227504730225, 'z3': 84.952}
;  terms = 70
;  score = 82.91257724952698
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isNegative (fp.max (fp.sub RNE (fp.min (fp.add RNE (fp.sub RNE x1 x7) (fp.div RNE (fp.abs x8) (fp.sub RNE x5 x4))) (fp.mul RNE (fp.add RNE x0 (fp.abs x6)) (fp.neg (fp.mul RNE x2 x9)))) (fp.div RNE (fp.add RNE (fp.div RNE (fp.abs x0) (fp.mul RNE x9 x7)) (fp.add RNE (fp.add RNE x3 x0) (fp.mul RNE x3 x7))) (fp.abs (fp.mul RNE (fp.mul RNE x3 x3) (fp.max x9 x9))))) (fp.add RNE (fp.neg (fp.abs (fp.mul RNE x5 x0))) (fp.max (fp.sub RNE (fp.mul RNE x2 (fp.sub RNE x2 x0)) (fp.add RNE x7 x6)) (fp.sub RNE (fp.neg x2) (fp.mul RNE (fp.sqrt RNE x7) (fp.roundToIntegral RNE x7))))))))(check-sat)
;  time  = {'mathsat': 1.844710111618042, 'z3': 128.395}
;  terms = 58
;  score = 126.55028988838197
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.lt (fp.div RNE (fp.min (fp.min (fp.sqrt RNE (fp.div RNE x8 x4)) (fp.sub RNE (fp.neg x2) (fp.mul RNE x2 x8))) (fp.max (fp.mul RNE (fp.mul RNE x0 x9) (fp.min x1 x3)) (fp.neg (fp.sub RNE x1 x7)))) (fp.abs (fp.add RNE (fp.sqrt RNE (fp.sqrt RNE x2)) (fp.add RNE (fp.add RNE x1 x3) (fp.max x8 x6))))) (fp.mul RNE (fp.neg (fp.roundToIntegral RNE (fp.mul RNE (fp.max x0 x1) (fp.sqrt RNE x3)))) (fp.sqrt RNE (fp.max (fp.div RNE (fp.abs x5) (fp.sqrt RNE x7)) (fp.abs (fp.sub RNE x4 x5)))))))(check-sat)
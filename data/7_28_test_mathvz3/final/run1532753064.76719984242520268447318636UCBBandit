;  time  = {'mathsat': 140.05850052833557, 'z3': 600}
;  terms = 66
;  score = 459.94149947166443
;  stdout= {'mathsat': 'sat', 'z3': 'timeout\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.mul RNE (fp.min (fp.roundToIntegral RNE (fp.div RNE (fp.roundToIntegral RNE x2) (fp.sqrt RNE x3))) (fp.add RNE (fp.sub RNE (fp.sub RNE x0 x8) (fp.div RNE x1 x5)) (fp.add RNE (fp.sqrt RNE x2) (fp.mul RNE x6 x8)))) (fp.sub RNE (fp.sub RNE (fp.abs (fp.neg x5)) (fp.div RNE (fp.min x7 x1) (fp.max x9 x8))) (fp.div RNE (fp.sqrt RNE (fp.mul RNE x2 x4)) (fp.neg (fp.min x6 x6))))) (fp.abs (fp.div RNE (fp.add RNE (fp.abs (fp.min x2 x8)) (fp.roundToIntegral RNE (fp.sqrt RNE x6))) (fp.add RNE (fp.sqrt RNE (fp.min x8 x5)) (fp.max (fp.mul RNE x9 x1) (fp.sub RNE x7 x2)))))))(check-sat)
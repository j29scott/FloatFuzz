;  time  = {'mathsat': 1.5465257167816162, 'z3': 152.347}
;  terms = 61
;  score = 150.8004742832184
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.add RNE (fp.min (fp.abs x7) (fp.abs x3)) (fp.sub RNE (fp.abs x4) (fp.roundToIntegral RNE x2))) (fp.div RNE (fp.sub RNE (fp.sub RNE x8 x9) (fp.mul RNE x8 x1)) (fp.sub RNE (fp.abs x6) (fp.min x7 x3)))) (fp.roundToIntegral RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x8 x5) (fp.sqrt RNE x2)) (fp.roundToIntegral RNE (fp.abs x7))))) (fp.abs (fp.mul RNE (fp.sub RNE (fp.sqrt RNE (fp.abs x1)) (fp.abs (fp.max x8 x3))) (fp.sub RNE (fp.mul RNE (fp.roundToIntegral RNE x4) (fp.abs x7)) (fp.mul RNE (fp.abs x0) (fp.min x5 x1)))))))(check-sat)
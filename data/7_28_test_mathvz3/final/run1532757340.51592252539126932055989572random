;  time  = {'mathsat': 2.3316843509674072, 'z3': 172.033}
;  terms = 58
;  score = 169.70131564903258
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isNaN (fp.div RNE (fp.max (fp.mul RNE (fp.abs (fp.sqrt RNE x2)) (fp.add RNE (fp.abs x0) (fp.add RNE x3 x8))) (fp.max (fp.abs (fp.min x8 x4)) (fp.max (fp.min x3 x6) (fp.roundToIntegral RNE x3)))) (fp.div RNE (fp.mul RNE (fp.sqrt RNE (fp.mul RNE x8 x1)) (fp.max (fp.max x7 x4) (fp.sqrt RNE x5))) (fp.max (fp.mul RNE (fp.max x8 x4) (fp.max (fp.add RNE x3 x6) (fp.sub RNE x5 x3))) (fp.add RNE (fp.abs x1) (fp.div RNE (fp.div RNE x6 x3) (fp.div RNE x4 x0))))))))(check-sat)
;  time  = {'mathsat': 29.627217292785645, 'z3': 457.683}
;  terms = 73
;  score = 428.05578270721435
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.abs (fp.max (fp.add RNE x3 x9) (fp.add RNE x3 x1))) (fp.neg (fp.abs (fp.mul RNE x6 x2)))) (fp.max (fp.roundToIntegral RNE (fp.max (fp.neg x5) (fp.add RNE x4 x3))) (fp.mul RNE (fp.max (fp.sqrt RNE x4) (fp.mul RNE x1 x4)) (fp.min (fp.mul RNE x0 x8) (fp.div RNE x1 x2))))) (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.max (fp.neg x4) (fp.min x7 x7)) (fp.div RNE (fp.roundToIntegral RNE x4) (fp.sqrt RNE x6))) (fp.neg (fp.div RNE (fp.div RNE x2 x2) (fp.neg x9)))) (fp.sub RNE (fp.abs (fp.mul RNE (fp.abs x8) (fp.neg x0))) (fp.sqrt RNE (fp.mul RNE (fp.abs x0) (fp.mul RNE x5 x9)))))))(check-sat)
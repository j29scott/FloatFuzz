;  time  = {'mathsat': 12.475438117980957, 'z3': 242.356}
;  terms = 69
;  score = 229.88056188201904
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.max (fp.sqrt RNE (fp.neg x2)) (fp.mul RNE (fp.div RNE x2 x0) (fp.min x8 x0))) (fp.abs (fp.max (fp.add RNE x0 x1) (fp.roundToIntegral RNE x5)))) (fp.mul RNE (fp.mul RNE (fp.max (fp.neg x6) (fp.neg x3)) (fp.div RNE (fp.neg x7) (fp.roundToIntegral RNE x0))) (fp.neg (fp.mul RNE (fp.roundToIntegral RNE x5) (fp.min x3 x8))))) (fp.add RNE (fp.neg (fp.neg (fp.mul RNE (fp.sqrt RNE x8) (fp.max x4 x1)))) (fp.mul RNE (fp.min (fp.roundToIntegral RNE (fp.div RNE x2 x5)) (fp.sqrt RNE (fp.add RNE x0 x5))) (fp.div RNE (fp.abs (fp.div RNE x3 x4)) (fp.div RNE (fp.sqrt RNE x4) (fp.abs x2)))))))(check-sat)
;  time  = {'mathsat': 5.175774335861206, 'z3': 214.7}
;  terms = 69
;  score = 209.52422566413878
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.min (fp.div RNE x6 x7) (fp.abs x3)) (fp.roundToIntegral RNE (fp.abs x7))) (fp.neg (fp.neg (fp.sub RNE x9 x7)))) (fp.abs (fp.mul RNE (fp.min (fp.abs x4) (fp.mul RNE x0 x3)) (fp.sub RNE (fp.min x3 x6) (fp.mul RNE x3 x2))))) (fp.sub RNE (fp.mul RNE (fp.neg (fp.sub RNE (fp.mul RNE x0 x5) (fp.min x5 x1))) (fp.abs (fp.min (fp.mul RNE x1 x4) (fp.roundToIntegral RNE x1)))) (fp.max (fp.div RNE (fp.abs (fp.sub RNE x8 x2)) (fp.abs (fp.add RNE x3 x1))) (fp.div RNE (fp.abs (fp.max x0 x9)) (fp.sqrt RNE (fp.max x2 x1)))))))(check-sat)
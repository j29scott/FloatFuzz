;  time  = {'z3': 600, 'mathsat': 16.29175066947937}
;  terms = 92
;  score = 583.7082493305206
;  stdout= {'z3': 'timeout\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.abs (fp.add RNE (fp.mul RNE x1 x1) (fp.sqrt RNE x6)))) (fp.roundToIntegral RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x8 x5) (fp.sub RNE x5 x9)) (fp.mul RNE (fp.abs x8) (fp.mul RNE x6 x9))) (fp.div RNE (fp.abs (fp.mul RNE x8 x1)) (fp.div RNE (fp.mul RNE x5 x6) (fp.min x9 x7)))))) (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.abs (fp.add RNE x9 x2)) (fp.min (fp.abs x6) (fp.add RNE x9 x7))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x5 x8) (fp.neg (fp.add RNE x3 x3))) (fp.mul RNE (fp.div RNE x4 (fp.abs x5)) (fp.abs x2)))) (fp.sub RNE (fp.div RNE (fp.abs (fp.sub RNE x3 x8)) (fp.div RNE (fp.abs x6) (fp.mul RNE x5 (fp.div RNE x6 x3)))) (fp.mul RNE (fp.abs (fp.mul RNE x7 x6)) (fp.abs (fp.sub RNE (fp.sqrt RNE x4) (fp.sqrt RNE x0))))))))(check-sat)
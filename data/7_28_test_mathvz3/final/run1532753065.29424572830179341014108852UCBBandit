;  time  = {'z3': 136.769, 'mathsat': 1.8498904705047607}
;  terms = 57
;  score = 134.91910952949524
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.neg (fp.div RNE (fp.abs x7) (fp.add RNE x7 x1))) (fp.div RNE (fp.sqrt RNE (fp.abs x6)) (fp.mul RNE (fp.min x6 x3) (fp.abs x2)))) (fp.add RNE (fp.neg (fp.max (fp.roundToIntegral RNE x4) (fp.sqrt RNE x7))) (fp.min (fp.sqrt RNE (fp.sub RNE x4 x5)) (fp.neg (fp.abs x1))))) (fp.max (fp.roundToIntegral RNE (fp.abs (fp.sqrt RNE (fp.abs x4)))) (fp.add RNE (fp.div RNE (fp.abs (fp.abs x1)) (fp.abs (fp.add RNE x4 x9))) (fp.abs (fp.add RNE (fp.div RNE x4 x5) (fp.neg x2)))))))(check-sat)
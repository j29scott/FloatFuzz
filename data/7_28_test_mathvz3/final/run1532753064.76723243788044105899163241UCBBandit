;  time  = {'mathsat': 10.035043239593506, 'z3': 192.726}
;  terms = 59
;  score = 182.6909567604065
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.sqrt RNE (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x6 x4) (fp.abs x8)) (fp.div RNE (fp.max x5 x4) (fp.div RNE x8 x2))) (fp.mul RNE (fp.min (fp.abs x9) (fp.sqrt RNE x1)) (fp.mul RNE (fp.abs x8) (fp.add RNE x3 x1))))) (fp.max (fp.min (fp.abs (fp.mul RNE (fp.div RNE x7 x3) (fp.div RNE x3 x1))) (fp.mul RNE (fp.neg (fp.mul RNE x5 x2)) (fp.neg (fp.div RNE x7 x0)))) (fp.abs (fp.add RNE (fp.min (fp.neg x8) (fp.neg x1)) (fp.sqrt RNE (fp.mul RNE x5 x0)))))))(check-sat)
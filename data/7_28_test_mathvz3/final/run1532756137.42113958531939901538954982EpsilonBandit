;  time  = {'mathsat': 17.89887523651123, 'z3': 600}
;  terms = 89
;  score = 582.1011247634888
;  stdout= {'mathsat': 'sat', 'z3': 'timeout\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.div RNE (fp.neg (fp.abs (fp.abs (fp.mul RNE x3 x9)))) (fp.mul RNE (fp.abs (fp.mul RNE (fp.abs x4) (fp.roundToIntegral RNE (fp.div RNE x3 x8)))) (fp.mul RNE (fp.abs (fp.div RNE x8 x8)) (fp.abs (fp.sub RNE x6 x2))))) (fp.mul RNE (fp.div RNE (fp.abs (fp.div RNE (fp.mul RNE x9 x4) (fp.neg (fp.mul RNE x1 x1)))) (fp.abs (fp.mul RNE (fp.abs x5) (fp.mul RNE (fp.mul RNE x7 x1) (fp.mul RNE x0 x7))))) (fp.mul RNE (fp.max (fp.mul RNE (fp.min x0 x6) (fp.neg (fp.min x9 x7))) (fp.mul RNE (fp.abs x5) (fp.abs (fp.div RNE x3 x4)))) (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.abs x0) (fp.abs x6)) (fp.div RNE (fp.sub RNE x4 x5) (fp.add RNE x6 x3))) (fp.min (fp.abs (fp.abs x0)) (fp.div RNE (fp.add RNE x3 x7) (fp.abs x5))))))))(check-sat)
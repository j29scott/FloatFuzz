;  time  = {'mathsat': 16.589972734451294, 'z3': 146.694}
;  terms = 69
;  score = 130.1040272655487
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.max (fp.add RNE (fp.sub RNE x5 x8) (fp.max x9 x0)) (fp.mul RNE (fp.roundToIntegral RNE x0) (fp.add RNE x3 x9))) (fp.min (fp.abs (fp.add RNE x9 x1)) (fp.add RNE (fp.neg x3) (fp.min x7 x0))))) (fp.max (fp.abs (fp.mul RNE (fp.min (fp.abs x4) (fp.abs x4)) (fp.max (fp.abs x8) (fp.div RNE x8 x0)))) (fp.sub RNE (fp.div RNE (fp.add RNE (fp.abs x3) (fp.roundToIntegral RNE x7)) (fp.div RNE (fp.sub RNE x3 x7) (fp.add RNE x4 x6))) (fp.div RNE (fp.add RNE (fp.abs x7) (fp.max x9 x9)) (fp.min (fp.mul RNE x9 x8) (fp.roundToIntegral RNE x3)))))))(check-sat)
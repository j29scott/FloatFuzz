;  time  = {'mathsat': 16.885088443756104, 'z3': 281.428}
;  terms = 74
;  score = 264.5429115562439
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.sub RNE (fp.roundToIntegral RNE (fp.add RNE (fp.abs (fp.div RNE x4 x5)) (fp.abs (fp.abs x8)))) (fp.mul RNE (fp.abs (fp.sub RNE (fp.roundToIntegral RNE x0) (fp.mul RNE x0 x5))) (fp.add RNE (fp.add RNE (fp.min (fp.abs x2) (fp.max x2 x3)) (fp.mul RNE (fp.abs x8) (fp.sqrt RNE x5))) (fp.abs (fp.mul RNE (fp.abs x4) (fp.sub RNE x8 x3)))))) (fp.sub RNE (fp.sqrt RNE (fp.add RNE (fp.div RNE (fp.abs x2) (fp.add RNE x9 x0)) (fp.mul RNE (fp.max x8 x1) (fp.div RNE x8 x5)))) (fp.mul RNE (fp.neg (fp.abs (fp.mul RNE x1 x6))) (fp.mul RNE (fp.mul RNE (fp.add RNE x0 x0) (fp.abs x4)) (fp.add RNE (fp.abs x6) (fp.sub RNE x5 x8)))))))(check-sat)
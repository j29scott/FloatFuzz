;  time  = {'z3': 600, 'mathsat': 47.894867181777954}
;  terms = 94
;  score = 552.105132818222
;  stdout= {'z3': 'timeout\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.roundToIntegral RNE x8) (fp.div RNE x9 x4)) (fp.div RNE (fp.abs x2) (fp.max (fp.div RNE x9 x3) (fp.sqrt RNE x0)))) (fp.sub RNE (fp.roundToIntegral RNE (fp.min x0 x0)) (fp.neg (fp.sqrt RNE (fp.neg x5))))) (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x0 x9) (fp.mul RNE x2 x2)) (fp.sub RNE (fp.sqrt RNE (fp.sub RNE x8 x0)) (fp.mul RNE (fp.add RNE x7 x8) (fp.mul RNE x1 x7)))) (fp.add RNE (fp.abs (fp.add RNE (fp.mul RNE x7 x2) (fp.roundToIntegral RNE x3))) (fp.sqrt RNE (fp.div RNE (fp.div RNE x7 x3) (fp.abs x8)))))) (fp.mul RNE (fp.abs (fp.sqrt RNE (fp.mul RNE (fp.mul RNE x3 x5) (fp.div RNE x3 x8)))) (fp.neg (fp.mul RNE (fp.neg (fp.sub RNE (fp.mul RNE x1 x1) (fp.div RNE x3 x7))) (fp.mul RNE (fp.sqrt RNE (fp.sub RNE x9 x3)) (fp.min (fp.sqrt RNE x0) (fp.sqrt RNE x8))))))))(check-sat)
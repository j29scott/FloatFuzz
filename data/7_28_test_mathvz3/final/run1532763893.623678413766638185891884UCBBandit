;  time  = {'mathsat': 3.688364267349243, 'z3': 207.07}
;  terms = 69
;  score = 203.38163573265075
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.neg (fp.sub RNE (fp.div RNE x2 x7) (fp.mul RNE x5 x2))) (fp.add RNE (fp.max (fp.sub RNE x0 x4) (fp.abs x4)) (fp.sub RNE (fp.div RNE x4 x4) (fp.div RNE x2 x2)))) (fp.div RNE (fp.add RNE (fp.neg (fp.abs x5)) (fp.min (fp.max x2 x4) (fp.mul RNE x8 x5))) (fp.neg (fp.add RNE (fp.neg x9) (fp.mul RNE x6 x6))))) (fp.sub RNE (fp.sqrt RNE (fp.div RNE (fp.neg (fp.sqrt RNE x7)) (fp.div RNE (fp.div RNE x5 x2) (fp.min x8 x9)))) (fp.neg (fp.sub RNE (fp.sqrt RNE (fp.add RNE x9 x7)) (fp.mul RNE (fp.mul RNE x3 x7) (fp.roundToIntegral RNE x9)))))))(check-sat)
;  time  = {'mathsat': 2.6564409732818604, 'z3': 328.738}
;  terms = 70
;  score = 326.08155902671814
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.mul RNE (fp.roundToIntegral RNE (fp.abs (fp.max (fp.div RNE x3 x4) (fp.max x8 x4)))) (fp.sub RNE (fp.add RNE (fp.add RNE (fp.neg x9) (fp.max x4 x8)) (fp.add RNE (fp.sub RNE x4 x5) (fp.sub RNE x2 x6))) (fp.sqrt RNE (fp.max (fp.abs x3) (fp.mul RNE x0 x1))))) (fp.div RNE (fp.max (fp.min (fp.neg (fp.div RNE x4 x7)) (fp.sub RNE (fp.abs x4) (fp.sub RNE x7 x7))) (fp.sqrt RNE (fp.sqrt RNE (fp.max x0 x6)))) (fp.sub RNE (fp.max (fp.roundToIntegral RNE (fp.mul RNE x5 x1)) (fp.min (fp.sub RNE x8 x4) (fp.abs x2))) (fp.sqrt RNE (fp.sub RNE (fp.mul RNE x6 x0) (fp.sqrt RNE x7)))))))(check-sat)
;  time  = {'mathsat': 2.8982467651367188, 'z3': 104.637}
;  terms = 64
;  score = 101.73875323486328
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isNegative (fp.min (fp.sub RNE (fp.abs (fp.div RNE (fp.mul RNE x2 x3) (fp.add RNE x6 x0))) (fp.add RNE (fp.sub RNE (fp.neg x1) (fp.roundToIntegral RNE (fp.div RNE x6 x0))) (fp.min (fp.mul RNE (fp.roundToIntegral RNE x9) (fp.roundToIntegral RNE x8)) (fp.mul RNE (fp.roundToIntegral RNE x9) (fp.neg x7))))) (fp.min (fp.max (fp.max (fp.roundToIntegral RNE x6) (fp.add RNE x2 x7)) (fp.add RNE (fp.mul RNE x6 x6) (fp.abs x8))) (fp.div RNE (fp.min (fp.abs (fp.neg x0)) (fp.neg (fp.div RNE x3 x9))) (fp.div RNE (fp.abs (fp.sub RNE x6 x4)) (fp.mul RNE (fp.abs x4) (fp.max x4 x4))))))))(check-sat)
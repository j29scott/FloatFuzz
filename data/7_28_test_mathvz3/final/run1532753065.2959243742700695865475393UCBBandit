;  time  = {'mathsat': 3.410701274871826, 'z3': 148.577}
;  terms = 60
;  score = 145.16629872512817
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.leq (fp.sub RNE (fp.max (fp.sqrt RNE (fp.neg (fp.roundToIntegral RNE x3))) (fp.sub RNE (fp.add RNE (fp.div RNE x3 x5) (fp.add RNE x6 x6)) (fp.abs (fp.sqrt RNE x4)))) (fp.sqrt RNE (fp.div RNE (fp.abs (fp.neg x9)) (fp.div RNE (fp.abs x3) (fp.abs x6))))) (fp.div RNE (fp.min (fp.max (fp.min (fp.roundToIntegral RNE x2) (fp.abs x5)) (fp.max (fp.mul RNE x6 x4) (fp.max x6 x9))) (fp.div RNE (fp.div RNE (fp.roundToIntegral RNE x3) (fp.abs x8)) (fp.div RNE (fp.roundToIntegral RNE x4) (fp.mul RNE x9 x6)))) (fp.sqrt RNE (fp.sqrt RNE (fp.neg (fp.neg x2)))))))(check-sat)
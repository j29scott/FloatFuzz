;  time  = {'z3': 219.481, 'mathsat': 1.9305624961853027}
;  terms = 60
;  score = 217.5504375038147
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.abs (fp.add RNE (fp.abs (fp.min (fp.add RNE x6 x6) (fp.sub RNE x4 x3))) (fp.neg (fp.mul RNE (fp.roundToIntegral RNE x6) (fp.min x1 x1))))) (fp.div RNE (fp.max (fp.sub RNE (fp.sqrt RNE (fp.div RNE x9 x2)) (fp.max (fp.div RNE x1 x6) (fp.add RNE x9 x1))) (fp.sub RNE (fp.min (fp.mul RNE x2 x5) (fp.add RNE x5 x4)) (fp.max (fp.sub RNE x4 x0) (fp.add RNE x8 x7)))) (fp.roundToIntegral RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x6 x7) (fp.max x4 x4)) (fp.neg (fp.min x2 x5)))))))(check-sat)
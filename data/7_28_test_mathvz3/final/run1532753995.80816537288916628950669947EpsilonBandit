;  time  = {'z3': 107.56, 'mathsat': 7.147134065628052}
;  terms = 65
;  score = 100.41286593437195
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.abs (fp.min x9 x5)) (fp.max (fp.max x4 x0) (fp.max x4 x5))) (fp.max (fp.abs (fp.abs x4)) (fp.add RNE (fp.neg x3) (fp.mul RNE x6 x0)))) (fp.abs (fp.sub RNE (fp.sub RNE (fp.sub RNE x3 x3) (fp.add RNE x2 x1)) (fp.sub RNE (fp.sqrt RNE x4) (fp.min x2 x7))))) (fp.mul RNE (fp.add RNE (fp.roundToIntegral RNE (fp.roundToIntegral RNE (fp.sqrt RNE x1))) (fp.mul RNE (fp.sub RNE (fp.sqrt RNE x3) (fp.neg x6)) (fp.neg (fp.roundToIntegral RNE x9)))) (fp.min (fp.sqrt RNE (fp.neg (fp.neg x5))) (fp.sqrt RNE (fp.abs (fp.add RNE x3 x6)))))))(check-sat)
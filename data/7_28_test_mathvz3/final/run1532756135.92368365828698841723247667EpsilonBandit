;  time  = {'z3': 106.122, 'mathsat': 3.672893762588501}
;  terms = 54
;  score = 102.4491062374115
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.max (fp.abs (fp.div RNE (fp.sqrt RNE (fp.roundToIntegral RNE x4)) (fp.sub RNE (fp.neg x3) (fp.neg x8)))) (fp.neg (fp.abs (fp.div RNE (fp.abs x2) (fp.sub RNE x6 x4))))) (fp.max (fp.min (fp.div RNE (fp.neg (fp.abs x5)) (fp.roundToIntegral RNE (fp.roundToIntegral RNE x7))) (fp.abs (fp.sub RNE (fp.abs x7) (fp.sqrt RNE x6)))) (fp.abs (fp.min (fp.sub RNE (fp.sqrt RNE x5) (fp.mul RNE (fp.div RNE x2 x3) (fp.div RNE x2 x9))) (fp.max (fp.div RNE x4 x6) (fp.max x0 x4)))))))(check-sat)
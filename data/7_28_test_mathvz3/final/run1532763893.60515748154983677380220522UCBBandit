;  time  = {'mathsat': 2.103186845779419, 'z3': 121.389}
;  terms = 58
;  score = 119.28581315422058
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.abs (fp.div RNE (fp.div RNE (fp.roundToIntegral RNE (fp.max x6 x3)) (fp.sub RNE (fp.sub RNE x1 x3) (fp.mul RNE x1 x9))) (fp.abs (fp.mul RNE (fp.max x7 x7) (fp.roundToIntegral RNE x5))))) (fp.mul RNE (fp.min (fp.min (fp.abs (fp.mul RNE x5 x4)) (fp.sub RNE (fp.add RNE x0 x1) (fp.roundToIntegral RNE x9))) (fp.min (fp.sub RNE (fp.add RNE x4 x6) (fp.max x9 x1)) (fp.sub RNE (fp.roundToIntegral RNE x7) (fp.div RNE x9 x9)))) (fp.abs (fp.mul RNE (fp.sqrt RNE (fp.mul RNE x0 x0)) (fp.abs (fp.abs x3)))))))(check-sat)
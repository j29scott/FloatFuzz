;  time  = {'z3': 207.959, 'mathsat': 14.19429087638855}
;  terms = 69
;  score = 193.76470912361145
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.div RNE (fp.max (fp.div RNE (fp.neg (fp.add RNE x5 x8)) (fp.min (fp.add RNE x1 x2) (fp.sqrt RNE x5))) (fp.div RNE (fp.mul RNE (fp.add RNE x7 x0) (fp.abs x6)) (fp.sqrt RNE (fp.mul RNE x0 x5)))) (fp.div RNE (fp.max (fp.max (fp.abs x8) (fp.abs x0)) (fp.add RNE (fp.sqrt RNE x6) (fp.sub RNE x7 x3))) (fp.abs (fp.abs (fp.roundToIntegral RNE x0))))) (fp.max (fp.abs (fp.add RNE (fp.abs (fp.min x5 x9)) (fp.abs (fp.abs x2)))) (fp.mul RNE (fp.abs (fp.min (fp.sqrt RNE x4) (fp.roundToIntegral RNE x1))) (fp.max (fp.div RNE (fp.abs x6) (fp.abs x2)) (fp.neg (fp.max x3 x9)))))))(check-sat)
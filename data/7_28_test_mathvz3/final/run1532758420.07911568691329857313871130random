;  time  = {'z3': 185.117, 'mathsat': 17.14888048171997}
;  terms = 66
;  score = 167.96811951828002
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.sub RNE (fp.sqrt RNE (fp.max (fp.roundToIntegral RNE (fp.add RNE x8 x7)) (fp.sub RNE (fp.max x9 x2) (fp.add RNE x4 x5)))) (fp.abs (fp.sqrt RNE (fp.sub RNE (fp.mul RNE x2 x8) (fp.max x5 x0))))) (fp.div RNE (fp.sub RNE (fp.neg (fp.mul RNE (fp.sub RNE x5 x9) (fp.roundToIntegral RNE (fp.mul RNE x9 x0)))) (fp.neg (fp.sqrt RNE (fp.max x8 x3)))) (fp.min (fp.min (fp.div RNE (fp.sub RNE x2 x7) (fp.sqrt RNE x0)) (fp.abs (fp.div RNE x3 x4))) (fp.sub RNE (fp.sub RNE (fp.add RNE x4 x7) (fp.sub RNE x8 x3)) (fp.mul RNE (fp.sub RNE x4 x2) (fp.abs x8)))))))(check-sat)
;  time  = {'mathsat': 12.057951211929321, 'z3': 250.241}
;  terms = 57
;  score = 238.1830487880707
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.lt (fp.roundToIntegral RNE (fp.abs (fp.mul RNE (fp.neg (fp.min x4 x8)) (fp.sqrt RNE (fp.div RNE x4 (fp.sqrt RNE x9)))))) (fp.min (fp.div RNE (fp.min (fp.mul RNE (fp.mul RNE x6 x5) (fp.mul RNE x7 x1)) (fp.div RNE (fp.neg x5) (fp.abs x1))) (fp.mul RNE (fp.roundToIntegral RNE (fp.abs x0)) (fp.div RNE (fp.div RNE x2 x3) (fp.abs x2)))) (fp.mul RNE (fp.neg (fp.mul RNE (fp.div RNE x2 (fp.sqrt RNE x8)) (fp.max x5 x7))) (fp.roundToIntegral RNE (fp.sub RNE (fp.abs x6) (fp.mul RNE x6 (fp.mul RNE x5 x5))))))))(check-sat)
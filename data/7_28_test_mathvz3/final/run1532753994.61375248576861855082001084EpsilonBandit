;  time  = {'z3': 185.47, 'mathsat': 7.979316473007202}
;  terms = 62
;  score = 177.4906835269928
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.mul RNE (fp.roundToIntegral RNE (fp.abs x2)) (fp.min (fp.add RNE x2 x9) (fp.min x4 x2))) (fp.abs (fp.sqrt RNE (fp.div RNE x6 x3)))) (fp.mul RNE (fp.abs (fp.sqrt RNE (fp.div RNE x2 x4))) (fp.min (fp.max (fp.add RNE x6 x0) (fp.min x0 x6)) (fp.max (fp.sub RNE x5 x6) (fp.mul RNE x5 x8))))) (fp.mul RNE (fp.abs (fp.add RNE (fp.abs (fp.max x0 x5)) (fp.mul RNE (fp.abs x8) (fp.abs x3)))) (fp.sqrt RNE (fp.div RNE (fp.neg (fp.min x8 x3)) (fp.roundToIntegral RNE (fp.max x6 x1)))))))(check-sat)
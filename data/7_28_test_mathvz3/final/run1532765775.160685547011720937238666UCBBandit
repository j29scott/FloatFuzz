;  time  = {'z3': 131.225, 'mathsat': 5.044466972351074}
;  terms = 71
;  score = 126.18053302764892
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.mul RNE (fp.max (fp.min x2 x1) (fp.max x1 x0)) (fp.max (fp.sqrt RNE x2) (fp.min x7 x5))) (fp.min (fp.min (fp.abs x9) (fp.add RNE x0 x4)) (fp.max (fp.div RNE x1 x6) (fp.sub RNE x4 x5)))) (fp.mul RNE (fp.abs (fp.add RNE (fp.sqrt RNE x7) (fp.roundToIntegral RNE x0))) (fp.abs (fp.roundToIntegral RNE (fp.roundToIntegral RNE x2))))) (fp.min (fp.add RNE (fp.add RNE (fp.max (fp.abs x3) (fp.mul RNE x3 x2)) (fp.abs (fp.min x0 x1))) (fp.abs (fp.add RNE (fp.sqrt RNE x3) (fp.max x7 x7)))) (fp.roundToIntegral RNE (fp.min (fp.sqrt RNE (fp.max x1 x3)) (fp.abs (fp.sqrt RNE x4)))))))(check-sat)
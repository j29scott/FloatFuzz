;  time  = {'mathsat': 23.065211534500122, 'z3': 370.828}
;  terms = 57
;  score = 347.76278846549985
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isNormal (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x2 x0) (fp.mul RNE x5 (fp.div RNE x8 x1))) (fp.add RNE (fp.roundToIntegral RNE x5) (fp.min x6 x9))) (fp.sqrt RNE (fp.mul RNE (fp.mul RNE x6 x7) (fp.add RNE x2 x9)))) (fp.mul RNE (fp.roundToIntegral RNE (fp.mul RNE (fp.min x3 x1) (fp.max x4 x0))) (fp.mul RNE (fp.mul RNE (fp.min x4 x9) (fp.div RNE x2 x2)) (fp.max (fp.add RNE (fp.add RNE x5 x2) (fp.add RNE x4 x4)) (fp.mul RNE (fp.abs x3) (fp.abs x1))))))))(check-sat)
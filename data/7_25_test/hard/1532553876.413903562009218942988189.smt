;  time  = {'z3': 596.261}
;  terms = 68
;  score = 596.261
;  stdout= {'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.leq (fp.abs (fp.add RNE (fp.add RNE (fp.div RNE (fp.max x7 x5) (fp.div RNE x3 x5)) (fp.add RNE (fp.add RNE x5 x2) (fp.add RNE x0 x6))) (fp.mul RNE (fp.add RNE (fp.roundToIntegral RNE x8) (fp.sqrt RNE x8)) (fp.roundToIntegral RNE (fp.sub RNE x8 x0))))) (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.max (fp.sub RNE x1 x7) (fp.roundToIntegral RNE x1)) (fp.mul RNE (fp.sub RNE x3 x1) (fp.mul RNE x6 x9))) (fp.add RNE (fp.sqrt RNE (fp.abs x9)) (fp.mul RNE (fp.min x6 x3) (fp.sub RNE x4 x2)))) (fp.min (fp.roundToIntegral RNE (fp.max (fp.sqrt RNE x1) (fp.div RNE x9 x9))) (fp.abs (fp.sqrt RNE (fp.div RNE x7 x4)))))))(check-sat)
;  time  = {'z3': 600}
;  terms = 69
;  score = 600
;  stdout= {'z3': 'timeout\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.div RNE (fp.div RNE (fp.max x6 x2) (fp.abs x5)) (fp.add RNE (fp.sqrt RNE x7) (fp.mul RNE x5 x9))) (fp.div RNE (fp.sqrt RNE (fp.max x4 x2)) (fp.abs (fp.min x0 x2)))) (fp.neg (fp.sub RNE (fp.sub RNE (fp.min x9 x1) (fp.add RNE x8 x4)) (fp.div RNE (fp.roundToIntegral RNE x2) (fp.mul RNE x5 x3))))) (fp.mul RNE (fp.min (fp.roundToIntegral RNE (fp.neg (fp.abs x2))) (fp.add RNE (fp.sqrt RNE (fp.min x5 x5)) (fp.mul RNE (fp.div RNE x1 x5) (fp.neg x7)))) (fp.div RNE (fp.abs (fp.div RNE (fp.sqrt RNE x5) (fp.roundToIntegral RNE x9))) (fp.abs (fp.roundToIntegral RNE (fp.add RNE x6 x7)))))))(check-sat)
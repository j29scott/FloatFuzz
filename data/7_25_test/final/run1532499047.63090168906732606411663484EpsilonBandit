;  time  = {'mathsat': 82.26486730575562, 'z3': 62.668}
;  terms = 70
;  score = 19.596867305755616
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.roundToIntegral RNE (fp.neg (fp.sub RNE x2 x8))) (fp.sub RNE (fp.div RNE (fp.mul RNE x2 x8) (fp.sqrt RNE x4)) (fp.min (fp.add RNE x6 x2) (fp.neg x0)))) (fp.min (fp.add RNE (fp.div RNE (fp.mul RNE x4 x9) (fp.mul RNE x8 x3)) (fp.min (fp.roundToIntegral RNE x3) (fp.sqrt RNE x9))) (fp.min (fp.add RNE (fp.min x8 x3) (fp.sub RNE x6 x7)) (fp.roundToIntegral RNE (fp.min x8 x3))))) (fp.neg (fp.min (fp.add RNE (fp.mul RNE (fp.neg x5) (fp.min x2 x3)) (fp.max (fp.max x2 x9) (fp.neg x6))) (fp.roundToIntegral RNE (fp.div RNE (fp.max x2 x2) (fp.max x5 x5)))))))(check-sat)
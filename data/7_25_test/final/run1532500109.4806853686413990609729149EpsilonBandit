;  time  = {'mathsat': 137.40937662124634, 'z3': 45.736}
;  terms = 61
;  score = 91.67337662124635
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.add RNE (fp.neg (fp.abs (fp.mul RNE (fp.min x8 x5) (fp.sqrt RNE x4)))) (fp.sub RNE (fp.div RNE (fp.neg (fp.abs x5)) (fp.max (fp.sub RNE x9 x1) (fp.mul RNE x5 x1))) (fp.div RNE (fp.max (fp.min x2 x6) (fp.sqrt RNE x2)) (fp.abs (fp.neg x6))))) (fp.neg (fp.mul RNE (fp.add RNE (fp.min (fp.div RNE x8 x1) (fp.min x5 x3)) (fp.min (fp.roundToIntegral RNE x9) (fp.abs x6))) (fp.div RNE (fp.mul RNE (fp.neg x9) (fp.max x9 x4)) (fp.sub RNE (fp.max x3 x5) (fp.div RNE x3 x3)))))))(check-sat)
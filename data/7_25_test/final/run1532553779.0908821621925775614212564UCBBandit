;  time  = {'z3': 54.51, 'mathsat': 454.7104573249817}
;  terms = 52
;  score = 400.2004573249817
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.abs (fp.min (fp.sub RNE (fp.abs (fp.abs x4)) (fp.sub RNE (fp.neg x8) (fp.abs x7))) (fp.abs (fp.sub RNE (fp.abs x6) (fp.neg x1))))) (fp.div RNE (fp.div RNE (fp.add RNE (fp.sub RNE (fp.max x1 x8) (fp.abs x8)) (fp.sqrt RNE (fp.div RNE x9 x7))) (fp.sqrt RNE (fp.abs (fp.min x8 x6)))) (fp.add RNE (fp.abs (fp.abs (fp.sqrt RNE x0))) (fp.add RNE (fp.sqrt RNE (fp.abs x7)) (fp.mul RNE (fp.div RNE x1 x9) (fp.sub RNE x4 x7)))))))(check-sat)
;  time  = {'z3': 0.098, 'mathsat': 2.8250772953033447}
;  terms = 57
;  score = 2.727077295303345
;  stdout= {'z3': 'unsat\n', 'mathsat': 'unsat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.div RNE (fp.sqrt RNE (fp.min (fp.max (fp.div RNE x2 x9) (fp.sub RNE x2 x9)) (fp.neg (fp.min x6 x5)))) (fp.abs (fp.abs (fp.abs (fp.neg x7))))) (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.neg x2) (fp.mul RNE x8 x2)) (fp.mul RNE (fp.max x5 x4) (fp.sqrt RNE x1))) (fp.abs (fp.roundToIntegral RNE (fp.min x3 x4)))) (fp.add RNE (fp.sqrt RNE (fp.neg (fp.abs x2))) (fp.mul RNE (fp.div RNE (fp.mul RNE x0 x7) (fp.abs x7)) (fp.div RNE (fp.roundToIntegral RNE x1) (fp.abs x4)))))))(check-sat)
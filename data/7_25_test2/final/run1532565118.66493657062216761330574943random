;  time  = {'mathsat': 600}
;  terms = 97
;  score = 600
;  stdout= {'mathsat': ''}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.sub RNE (fp.abs (fp.add RNE (fp.abs (fp.div RNE x5 x7)) (fp.add RNE (fp.abs x8) (fp.div RNE x3 x8)))) (fp.sub RNE (fp.abs (fp.mul RNE (fp.mul RNE (fp.max x5 x2) (fp.neg x2)) (fp.add RNE (fp.max x5 x3) (fp.add RNE x5 x0)))) (fp.add RNE (fp.sub RNE (fp.add RNE (fp.max x8 x4) (fp.sqrt RNE x4)) (fp.add RNE (fp.roundToIntegral RNE x1) (fp.abs x8))) (fp.div RNE (fp.neg (fp.roundToIntegral RNE x7)) (fp.div RNE (fp.neg x1) (fp.roundToIntegral RNE x7)))))) (fp.div RNE (fp.div RNE (fp.add RNE (fp.min (fp.roundToIntegral RNE x8) (fp.sqrt RNE x4)) (fp.min (fp.add RNE x7 x8) (fp.neg x0))) (fp.max (fp.abs (fp.neg x7)) (fp.sub RNE (fp.abs x9) (fp.div RNE x2 x2)))) (fp.max (fp.min (fp.mul RNE (fp.max x0 x7) (fp.mul RNE x5 x3)) (fp.abs (fp.min x1 x0))) (fp.neg (fp.mul RNE (fp.sub RNE x5 x3) (fp.min x6 x7)))))))(check-sat)
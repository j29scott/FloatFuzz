;  time  = {'mathsat': 180.80124878883362}
;  terms = 140
;  score = 180.80124878883362
;  stdout= {'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.div RNE (fp.sub RNE (fp.div RNE x6 (fp.div RNE x6 x4)) (fp.div RNE x0 x3)) (fp.div RNE (fp.sqrt RNE x1) (fp.div RNE x8 x0))) (fp.div RNE (fp.div RNE (fp.abs x2) (fp.div RNE (fp.mul RNE x8 x3) (fp.mul RNE x1 x9))) (fp.sub RNE (fp.mul RNE (fp.add RNE x3 x3) (fp.sub RNE x1 x8)) (fp.mul RNE (fp.abs x8) (fp.div RNE x5 x7))))) (fp.div RNE (fp.div RNE (fp.min (fp.max x9 x7) (fp.roundToIntegral RNE x4)) (fp.div RNE (fp.div RNE x9 x5) (fp.div RNE x3 (fp.div RNE x8 x3)))) (fp.div RNE (fp.div RNE (fp.div RNE x8 x8) (fp.min (fp.abs x7) (fp.sqrt RNE x7))) (fp.div RNE (fp.sub RNE x7 x5) (fp.div RNE x5 x7))))) (fp.div RNE (fp.div RNE (fp.max (fp.div RNE (fp.neg x0) (fp.div RNE x7 (fp.min x5 x1))) (fp.div RNE (fp.sub RNE x6 x4) (fp.div RNE x1 (fp.abs x6)))) (fp.div RNE (fp.sub RNE (fp.div RNE x6 x6) (fp.mul RNE x5 x2)) (fp.neg (fp.sub RNE (fp.abs x9) (fp.sqrt RNE x4))))) (fp.div RNE (fp.mul RNE (fp.div RNE (fp.min x3 x1) (fp.mul RNE (fp.div RNE x9 x6) (fp.div RNE x3 x7))) (fp.min (fp.min x0 x7) (fp.min x4 x4))) (fp.mul RNE (fp.sqrt RNE (fp.div RNE x4 x3)) (fp.abs (fp.div RNE x2 x6)))))))(check-sat)
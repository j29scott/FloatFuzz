;  time  = {'mathsat': 439.1862983703613}
;  terms = 66
;  score = 439.1862983703613
;  stdout= {'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isSubnormal (fp.div RNE (fp.div RNE (fp.div RNE (fp.roundToIntegral RNE (fp.div RNE x5 x5)) (fp.div RNE (fp.div RNE x1 x6) (fp.mul RNE x1 x6))) (fp.max (fp.sub RNE (fp.div RNE x7 x9) (fp.neg x3)) (fp.div RNE (fp.div RNE x8 x4) (fp.sqrt RNE x0)))) (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.add RNE x1 x5) (fp.neg (fp.add RNE x5 x7))) (fp.roundToIntegral RNE (fp.div RNE x7 x4))) (fp.div RNE (fp.div RNE (fp.sqrt RNE x5) (fp.div RNE (fp.sub RNE x9 x8) (fp.div RNE x6 x6))) (fp.sub RNE (fp.add RNE (fp.abs x9) (fp.sqrt RNE x1)) (fp.mul RNE (fp.div RNE x3 x5) (fp.div RNE x2 x1))))))))(check-sat)
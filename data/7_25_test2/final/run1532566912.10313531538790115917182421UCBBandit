;  time  = {'mathsat': 127.41911578178406}
;  terms = 97
;  score = 127.41911578178406
;  stdout= {'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isNegative (fp.div RNE (fp.div RNE (fp.div RNE (fp.div RNE (fp.div RNE x7 x5) (fp.div RNE x4 (fp.div RNE x6 x8))) (fp.div RNE (fp.max (fp.add RNE x1 x1) (fp.abs x2)) (fp.max (fp.sqrt RNE x7) (fp.sub RNE x9 x7)))) (fp.min (fp.sqrt RNE (fp.div RNE (fp.max x7 x8) (fp.mul RNE x7 x4))) (fp.min (fp.div RNE (fp.mul RNE x8 x7) (fp.add RNE x8 x0)) (fp.sub RNE (fp.div RNE x7 x6) (fp.max x7 x7))))) (fp.div RNE (fp.div RNE (fp.div RNE (fp.add RNE (fp.add RNE x6 x3) (fp.div RNE x7 x0)) (fp.min (fp.max x2 x1) (fp.div RNE x4 x7))) (fp.div RNE (fp.mul RNE (fp.div RNE x0 x2) (fp.div RNE x4 x2)) (fp.div RNE (fp.div RNE x4 x9) (fp.max x5 x4)))) (fp.sqrt RNE (fp.min (fp.div RNE (fp.sqrt RNE x6) (fp.div RNE x2 x6)) (fp.div RNE (fp.div RNE x6 x1) (fp.div RNE x9 x6))))))))(check-sat)
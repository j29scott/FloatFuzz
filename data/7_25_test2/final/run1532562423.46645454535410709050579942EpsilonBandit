;  time  = {'mathsat': 187.9779736995697}
;  terms = 96
;  score = 187.9779736995697
;  stdout= {'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isZero (fp.max (fp.div RNE (fp.max (fp.div RNE (fp.add RNE x7 x7) (fp.max x8 (fp.max x7 x1))) (fp.min (fp.sub RNE (fp.abs x0) (fp.div RNE x7 x9)) (fp.div RNE (fp.div RNE x5 x2) (fp.div RNE x4 x8)))) (fp.div RNE (fp.max (fp.div RNE x5 x5) (fp.max x4 x8)) (fp.div RNE (fp.max x9 x9) (fp.div RNE x8 (fp.div RNE x6 x8))))) (fp.max (fp.div RNE (fp.div RNE (fp.div RNE x1 x5) (fp.div RNE x6 x7)) (fp.sub RNE (fp.div RNE (fp.max x7 x9) (fp.sub RNE x0 x1)) (fp.div RNE (fp.div RNE x6 x9) (fp.max x7 x3)))) (fp.max (fp.max (fp.mul RNE (fp.neg x9) (fp.max x5 x3)) (fp.max (fp.mul RNE x6 x3) (fp.sqrt RNE x7))) (fp.div RNE (fp.mul RNE (fp.div RNE x6 x0) (fp.div RNE x4 x4)) (fp.max (fp.mul RNE x8 x4) (fp.sqrt RNE x9))))))))(check-sat)
;  time  = {'mathsat': 279.33835530281067}
;  terms = 69
;  score = 279.33835530281067
;  stdout= {'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.neg x1) (fp.neg x6)) (fp.sqrt RNE (fp.max x5 x1))) (fp.sub RNE (fp.abs (fp.roundToIntegral RNE x4)) (fp.add RNE (fp.mul RNE x7 x8) (fp.max x4 x4)))) (fp.mul RNE (fp.roundToIntegral RNE (fp.mul RNE (fp.div RNE x3 x3) (fp.mul RNE x5 x1))) (fp.mul RNE (fp.sqrt RNE (fp.mul RNE x3 x1)) (fp.add RNE (fp.max x1 x8) (fp.div RNE x1 x9))))) (fp.sqrt RNE (fp.add RNE (fp.mul RNE (fp.div RNE (fp.abs x5) (fp.sub RNE x7 x8)) (fp.roundToIntegral RNE (fp.min x4 x1))) (fp.min (fp.min (fp.roundToIntegral RNE x7) (fp.abs x7)) (fp.max (fp.roundToIntegral RNE x7) (fp.roundToIntegral RNE x6)))))))(check-sat)
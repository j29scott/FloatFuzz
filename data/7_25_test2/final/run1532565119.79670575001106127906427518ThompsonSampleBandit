;  time  = {'mathsat': 197.1814625263214}
;  terms = 80
;  score = 197.1814625263214
;  stdout= {'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.sqrt RNE (fp.div RNE (fp.abs (fp.sqrt RNE (fp.div RNE x3 (fp.sqrt RNE x6)))) (fp.div RNE (fp.div RNE (fp.div RNE x0 (fp.roundToIntegral RNE x9)) (fp.div RNE x2 x7)) (fp.div RNE (fp.div RNE (fp.mul RNE x6 x6) (fp.neg x8)) (fp.min (fp.min x4 x5) (fp.neg x0)))))) (fp.div RNE (fp.div RNE (fp.div RNE (fp.max (fp.div RNE x8 x2) (fp.div RNE x9 (fp.min x0 x7))) (fp.abs (fp.div RNE x1 (fp.sqrt RNE x9)))) (fp.sub RNE (fp.neg (fp.mul RNE x3 x5)) (fp.neg (fp.sub RNE x0 x3)))) (fp.sub RNE (fp.sqrt RNE (fp.abs (fp.max (fp.neg x2) (fp.add RNE x8 x3)))) (fp.sqrt RNE (fp.sub RNE (fp.mul RNE (fp.neg x3) (fp.div RNE x5 x7)) (fp.div RNE (fp.div RNE x2 x2) (fp.abs x8))))))))(check-sat)
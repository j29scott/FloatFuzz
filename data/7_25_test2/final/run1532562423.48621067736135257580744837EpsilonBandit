;  time  = {'mathsat': 600}
;  terms = 69
;  score = 600
;  stdout= {'mathsat': ''}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isSubnormal (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.neg x6) (fp.neg x4)) (fp.div RNE (fp.mul RNE x0 x1) (fp.mul RNE (fp.mul RNE x6 x4) (fp.neg x7)))) (fp.neg (fp.roundToIntegral RNE (fp.add RNE x7 x2)))) (fp.mul RNE (fp.min (fp.mul RNE (fp.mul RNE x7 x8) (fp.mul RNE (fp.sub RNE x5 x6) (fp.mul RNE x1 x1))) (fp.div RNE (fp.div RNE x2 (fp.mul RNE x4 x0)) (fp.sqrt RNE (fp.min x8 x7)))) (fp.add RNE (fp.abs (fp.div RNE (fp.add RNE x6 x5) (fp.mul RNE x1 x6))) (fp.div RNE (fp.add RNE (fp.mul RNE x9 x0) (fp.neg x3)) (fp.add RNE (fp.div RNE x3 x4) (fp.neg x4))))))))(check-sat)
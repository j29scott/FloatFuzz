;  time  = {'mathsat': 35.43059778213501, 'z3': 21.626}
;  terms = 58
;  score = 13.804597782135009
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.leq (fp.neg (fp.min (fp.add RNE (fp.max (fp.abs x3) (fp.sub RNE x9 x9)) (fp.abs (fp.max x3 x0))) (fp.div RNE (fp.mul RNE (fp.roundToIntegral RNE x0) (fp.sqrt RNE x6)) (fp.mul RNE (fp.div RNE x6 x6) (fp.add RNE x1 x5))))) (fp.add RNE (fp.div RNE (fp.neg (fp.sqrt RNE (fp.abs x0))) (fp.max (fp.div RNE (fp.roundToIntegral RNE x5) (fp.abs x7)) (fp.add RNE (fp.abs x2) (fp.abs x3)))) (fp.neg (fp.mul RNE (fp.mul RNE (fp.mul RNE x5 x8) (fp.sub RNE x5 x2)) (fp.div RNE (fp.abs x1) (fp.neg x8)))))))(check-sat)
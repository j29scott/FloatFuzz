;  time  = {'z3': 195.637, 'mathsat': 242.34845519065857}
;  terms = 69
;  score = 46.71145519065857
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.div RNE (fp.sqrt RNE (fp.neg (fp.roundToIntegral RNE (fp.mul RNE x5 x4)))) (fp.max (fp.abs (fp.max (fp.sub RNE x9 x0) (fp.max x5 x4))) (fp.sub RNE (fp.min (fp.mul RNE x3 x7) (fp.sqrt RNE x9)) (fp.sqrt RNE (fp.min x9 x7))))) (fp.add RNE (fp.sub RNE (fp.min (fp.neg (fp.neg x3)) (fp.roundToIntegral RNE (fp.add RNE x1 x5))) (fp.sqrt RNE (fp.div RNE (fp.neg x9) (fp.sub RNE x9 x5)))) (fp.div RNE (fp.roundToIntegral RNE (fp.add RNE (fp.abs x3) (fp.add RNE x1 (fp.mul RNE x7 x5)))) (fp.mul RNE (fp.min (fp.mul RNE x3 x6) (fp.neg x5)) (fp.add RNE (fp.min x3 x3) (fp.add RNE x4 x7)))))))(check-sat)
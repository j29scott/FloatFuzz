;  time  = {'mathsat': 600, 'z3': 120.902}
;  terms = 70
;  score = 479.098
;  stdout= {'mathsat': '', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.div RNE (fp.abs (fp.min (fp.neg (fp.roundToIntegral RNE x9)) (fp.roundToIntegral RNE (fp.add RNE x3 x3)))) (fp.mul RNE (fp.abs (fp.sub RNE (fp.neg x0) (fp.abs x9))) (fp.min (fp.sub RNE (fp.max x4 x8) (fp.max x6 x6)) (fp.sqrt RNE (fp.abs x7))))) (fp.sub RNE (fp.abs (fp.max (fp.mul RNE (fp.mul RNE x6 x4) (fp.min x6 x6)) (fp.abs (fp.neg x4)))) (fp.max (fp.add RNE (fp.mul RNE (fp.neg x6) (fp.div RNE x6 x3)) (fp.max (fp.neg x3) (fp.min x5 x3))) (fp.add RNE (fp.add RNE (fp.add RNE x7 x4) (fp.roundToIntegral RNE x0)) (fp.div RNE (fp.div RNE x0 x5) (fp.div RNE x4 x0)))))))(check-sat)
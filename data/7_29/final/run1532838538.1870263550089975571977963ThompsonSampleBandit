;  time  = {'mathsat': 151.59831595420837, 'z3': 70.051}
;  terms = 56
;  score = 81.54731595420837
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.neg (fp.add RNE (fp.div RNE (fp.mul RNE (fp.div RNE x9 x5) (fp.min x0 x8)) (fp.mul RNE (fp.min x0 x4) (fp.max x5 x3))) (fp.max (fp.max (fp.sub RNE x6 x8) (fp.min x0 x4)) (fp.roundToIntegral RNE (fp.div RNE x6 x6))))) (fp.roundToIntegral RNE (fp.min (fp.div RNE (fp.max (fp.sqrt RNE x7) (fp.sub RNE x3 x7)) (fp.roundToIntegral RNE (fp.abs x7))) (fp.min (fp.add RNE (fp.max x0 x0) (fp.max x1 x5)) (fp.div RNE (fp.abs x4) (fp.mul RNE x2 x4)))))))(check-sat)
;  time  = {'z3': 3.485, 'mathsat': 175.13861918449402}
;  terms = 50
;  score = 171.653619184494
;  stdout= {'z3': 'unsat\n', 'mathsat': 'unsat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.lt (fp.min (fp.abs (fp.mul RNE (fp.sqrt RNE (fp.sub RNE x8 x8)) (fp.min (fp.min x7 x6) (fp.abs x0)))) (fp.sqrt RNE (fp.neg (fp.roundToIntegral RNE (fp.max x4 x7))))) (fp.add RNE (fp.mul RNE (fp.sqrt RNE (fp.neg (fp.div RNE x1 x1))) (fp.sqrt RNE (fp.div RNE (fp.abs x1) (fp.sqrt RNE x7)))) (fp.sub RNE (fp.sqrt RNE (fp.mul RNE (fp.max x4 x6) (fp.max x8 x3))) (fp.sub RNE (fp.roundToIntegral RNE (fp.add RNE x1 x0)) (fp.neg (fp.neg x4)))))))(check-sat)
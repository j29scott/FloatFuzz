;  time  = {'mathsat': 398.0442979335785, 'z3': 133.369}
;  terms = 64
;  score = 264.67529793357846
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.max (fp.add RNE (fp.max (fp.mul RNE (fp.div RNE x8 x3) (fp.roundToIntegral RNE x2)) (fp.div RNE (fp.add RNE x6 x4) (fp.neg x3))) (fp.abs (fp.div RNE (fp.mul RNE x4 x3) (fp.div RNE x0 x7)))) (fp.sqrt RNE (fp.div RNE (fp.sub RNE (fp.min x0 x7) (fp.div RNE x4 x9)) (fp.mul RNE (fp.neg x1) (fp.min x8 x9))))) (fp.max (fp.roundToIntegral RNE (fp.sqrt RNE (fp.sqrt RNE (fp.div RNE x8 x8)))) (fp.min (fp.abs (fp.sqrt RNE (fp.max x4 x2))) (fp.div RNE (fp.mul RNE (fp.mul RNE x1 x8) (fp.mul RNE x7 x1)) (fp.roundToIntegral RNE (fp.div RNE x8 x7)))))))(check-sat)
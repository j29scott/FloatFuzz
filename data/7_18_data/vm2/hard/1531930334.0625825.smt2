;  time  = 600
;  terms = 76
;  score = 0.6041666666666666
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.isSubnormal (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.abs (fp.mul RNE (fp.abs x2) (fp.mul RNE (fp.neg (fp.neg (fp.add RNE x5 x8))) x6))) (fp.add RNE x11 x1)) (fp.neg (fp.neg x4))) (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.neg (fp.neg (fp.add RNE (fp.abs x11) x6))) (fp.abs (fp.mul RNE (fp.sub RNE x14 x9) (fp.abs (fp.abs x11))))) (fp.abs (fp.mul RNE (fp.mul RNE x4 (fp.neg (fp.neg x2))) (fp.neg (fp.abs (fp.sub RNE x8 x12)))))) x14) (fp.abs (fp.add RNE (fp.abs (fp.add RNE (fp.neg (fp.neg (fp.abs x0))) (fp.sub RNE (fp.neg (fp.sub RNE x8 x11)) (fp.add RNE (fp.add RNE x2 x9) (fp.neg x7))))) (fp.neg (fp.neg (fp.mul RNE x7 x4)))))))))
(check-sat)
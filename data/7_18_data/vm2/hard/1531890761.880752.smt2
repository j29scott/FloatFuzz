;  time  = 600
;  terms = 5
;  score = 0.9824561403508771
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.isSubnormal (fp.mul RNE (fp.add RNE (fp.mul RNE x10 (fp.add RNE (fp.sub RNE x3 x5) x13)) (fp.abs (fp.neg (fp.add RNE (fp.add RNE x13 (fp.add RNE (fp.add RNE (fp.neg x1) (fp.mul RNE x8 x11)) (fp.neg (fp.add RNE x12 x10)))) x12)))) (fp.neg (fp.mul RNE (fp.neg x2) (fp.mul RNE (fp.mul RNE (fp.abs (fp.add RNE (fp.add RNE (fp.sub RNE x14 x12) x13) (fp.add RNE (fp.neg x0) x9))) (fp.add RNE (fp.sub RNE (fp.mul RNE x10 x7) (fp.mul RNE (fp.abs x10) (fp.abs x4))) (fp.abs (fp.mul RNE (fp.abs x3) (fp.mul RNE x10 x14))))) (fp.mul RNE (fp.mul RNE (fp.neg (fp.add RNE (fp.sub RNE x11 x14) x1)) (fp.neg x8)) (fp.abs (fp.abs x10)))))))))
(check-sat)
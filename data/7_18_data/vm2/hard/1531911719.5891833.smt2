;  time  = 600
;  terms = 75
;  score = 0.5945945945945946
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.isSubnormal (fp.add RNE (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.abs (fp.add RNE (fp.add RNE (fp.mul RNE (fp.sub RNE x0 x9) (fp.add RNE x10 x6)) x1) (fp.add RNE (fp.mul RNE (fp.abs x10) (fp.sub RNE x6 x7)) (fp.mul RNE (fp.abs x5) (fp.sub RNE x14 x11))))) x9) x11) (fp.abs x11)) (fp.neg (fp.add RNE (fp.add RNE (fp.mul RNE x13 (fp.add RNE (fp.mul RNE x7 (fp.mul RNE (fp.neg x5) (fp.abs x6))) (fp.sub RNE (fp.abs (fp.abs x0)) (fp.add RNE (fp.mul RNE x8 x5) (fp.neg x11))))) x13) (fp.sub RNE x2 (fp.abs (fp.add RNE (fp.add RNE x11 x2) (fp.add RNE (fp.sub RNE x9 (fp.mul RNE x2 x10)) (fp.mul RNE (fp.sub RNE x7 x4) x8))))))))))
(check-sat)
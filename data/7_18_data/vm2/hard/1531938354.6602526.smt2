;  time  = 600
;  terms = 67
;  score = 0.6510416666666666
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.isSubnormal (fp.add RNE (fp.sub RNE (fp.add RNE x6 (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE x5 x3) (fp.add RNE x3 x13)) (fp.add RNE (fp.mul RNE x8 x9) (fp.add RNE x2 x2))) (fp.add RNE (fp.neg (fp.neg x14)) (fp.sub RNE x10 (fp.mul RNE x6 x9)))) (fp.mul RNE (fp.sub RNE (fp.abs (fp.mul RNE x4 x9)) (fp.mul RNE (fp.abs x1) x1)) x5)) (fp.abs (fp.mul RNE x3 x0)))) x0) (fp.neg (fp.sub RNE x2 (fp.add RNE (fp.abs (fp.neg (fp.mul RNE (fp.add RNE (fp.neg x12) (fp.sub RNE x2 x5)) (fp.mul RNE x8 (fp.add RNE x0 x12))))) x8))))))
(check-sat)
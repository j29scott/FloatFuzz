;  time  = 600
;  terms = 81
;  score = 0.5621621621621622
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.isSubnormal (fp.abs (fp.add RNE (fp.abs (fp.abs (fp.sub RNE (fp.abs (fp.abs (fp.neg x0))) (fp.mul RNE (fp.abs x5) (fp.abs (fp.neg (fp.neg x2))))))) (fp.sub RNE x11 (fp.add RNE (fp.add RNE (fp.neg (fp.sub RNE (fp.abs (fp.add RNE x11 x8)) (fp.sub RNE (fp.sub RNE x12 x0) (fp.abs x3)))) (fp.sub RNE (fp.add RNE x4 (fp.sub RNE (fp.sub RNE x12 x4) x13)) (fp.sub RNE (fp.mul RNE (fp.mul RNE x9 x8) (fp.add RNE x0 x2)) (fp.mul RNE (fp.abs x12) (fp.abs x9))))) (fp.add RNE (fp.mul RNE x9 (fp.neg (fp.abs x11))) (fp.add RNE (fp.sub RNE (fp.add RNE (fp.abs x13) x14) (fp.add RNE (fp.mul RNE x8 x3) x5)) (fp.add RNE (fp.neg (fp.mul RNE x5 x8)) (fp.abs (fp.abs x11)))))))))))
(check-sat)
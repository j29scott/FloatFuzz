;  time  = 600
;  terms = 34
;  score = 0.859504132231405
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.isSubnormal (fp.sub RNE (fp.sub RNE (fp.neg (fp.abs (fp.sub RNE (fp.abs (fp.add RNE (fp.mul RNE (fp.abs x1) x14) (fp.abs (fp.neg x2)))) x5))) (fp.sub RNE x1 (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.abs (fp.abs x10)) (fp.sub RNE (fp.sub RNE x2 x8) (fp.sub RNE x12 x12))) (fp.add RNE x10 (fp.neg (fp.add RNE x5 x10)))) (fp.abs (fp.mul RNE x11 x14))) (fp.neg (fp.add RNE (fp.add RNE (fp.abs x8) (fp.sub RNE x4 (fp.abs x4))) (fp.mul RNE (fp.mul RNE x4 (fp.add RNE x10 x0)) (fp.neg (fp.sub RNE x10 x1)))))))) x8)))
(check-sat)
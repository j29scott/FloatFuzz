;  time  = 600
;  terms = 74
;  score = 0.7403508771929824
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.isSubnormal (fp.add RNE (fp.neg (fp.mul RNE x9 (fp.neg (fp.neg (fp.neg (fp.mul RNE (fp.sub RNE (fp.sub RNE x9 x11) (fp.neg x6)) x8)))))) (fp.abs (fp.mul RNE (fp.neg x14) (fp.abs (fp.abs (fp.add RNE (fp.add RNE (fp.mul RNE (fp.sub RNE x1 x4) (fp.abs x5)) (fp.mul RNE (fp.neg x8) (fp.neg x2))) (fp.add RNE (fp.mul RNE (fp.add RNE x12 x1) (fp.abs x4)) (fp.mul RNE (fp.sub RNE x14 x14) (fp.mul RNE x0 x5)))))))))))
(check-sat)
;  time  = 600
;  terms = 2
;  score = 0.9904306220095693
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.isSubnormal (fp.mul RNE (fp.mul RNE (fp.abs (fp.sub RNE (fp.mul RNE (fp.mul RNE x7 (fp.sub RNE (fp.mul RNE x11 (fp.add RNE x5 x3)) x13)) (fp.abs (fp.abs x12))) (fp.abs (fp.mul RNE (fp.sub RNE x6 (fp.neg (fp.add RNE x1 x1))) (fp.abs (fp.sub RNE (fp.abs x12) x14)))))) (fp.sub RNE x4 x7)) (fp.mul RNE (fp.add RNE (fp.abs (fp.abs x14)) (fp.neg (fp.sub RNE (fp.mul RNE x7 (fp.mul RNE (fp.neg (fp.neg x7)) x3)) (fp.abs x8)))) (fp.mul RNE (fp.neg (fp.mul RNE (fp.abs (fp.sub RNE x4 (fp.sub RNE x10 x2))) (fp.neg x10))) (fp.mul RNE (fp.abs (fp.add RNE x2 (fp.mul RNE x0 (fp.add RNE (fp.abs x0) (fp.add RNE x6 x14))))) (fp.add RNE (fp.abs (fp.sub RNE x2 (fp.sub RNE (fp.neg x9) (fp.abs x12)))) (fp.sub RNE x7 x3))))))))
(check-sat)
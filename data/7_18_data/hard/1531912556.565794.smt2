;  time  = 600
;  terms = 6
;  score = 0.975609756097561
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.isSubnormal (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x0 (fp.abs x10)) x0) (fp.sub RNE (fp.neg x1) x13)) (fp.sub RNE (fp.abs (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.abs (fp.sub RNE x3 x10)) (fp.mul RNE (fp.abs x1) (fp.abs x5))) x10) (fp.abs (fp.mul RNE (fp.mul RNE (fp.neg x10) (fp.mul RNE x3 x9)) (fp.neg x0)))) (fp.mul RNE (fp.neg (fp.neg (fp.add RNE (fp.sub RNE x3 x8) x7))) (fp.mul RNE (fp.add RNE (fp.neg (fp.abs x1)) x6) (fp.neg (fp.add RNE x1 (fp.sub RNE x6 x4))))))) (fp.neg (fp.add RNE (fp.mul RNE x5 (fp.neg (fp.sub RNE (fp.neg x13) (fp.neg (fp.mul RNE x13 x2))))) (fp.neg (fp.neg x8))))))))
(check-sat)
;  time  = 600
;  terms = 77
;  score = 0.7158671586715867
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.isSubnormal (fp.mul RNE (fp.mul RNE x10 (fp.abs (fp.mul RNE x0 (fp.add RNE (fp.mul RNE (fp.neg (fp.abs (fp.add RNE x12 x13))) (fp.add RNE (fp.add RNE (fp.abs x11) (fp.sub RNE x3 x1)) (fp.abs (fp.sub RNE x10 x13)))) (fp.sub RNE x10 (fp.add RNE (fp.sub RNE (fp.neg x12) (fp.mul RNE x1 x13)) (fp.add RNE (fp.add RNE x6 x5) (fp.add RNE x2 x11)))))))) (fp.abs (fp.abs (fp.add RNE (fp.neg (fp.sub RNE (fp.add RNE (fp.abs (fp.add RNE x14 x2)) (fp.mul RNE x3 (fp.neg x10))) x4)) (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.neg x4) (fp.abs x0)) (fp.abs (fp.add RNE x11 x4))) x2) (fp.neg (fp.add RNE x11 (fp.add RNE x4 (fp.add RNE x10 x3)))))))))))
(check-sat)
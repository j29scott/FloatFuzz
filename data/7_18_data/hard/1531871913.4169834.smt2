;  time  = 600
;  terms = 144
;  score = 0.34841628959276016
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.isNormal (fp.mul RNE (fp.neg (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.abs (fp.neg (fp.add RNE (fp.neg x10) (fp.add RNE x12 x3)))) (fp.neg (fp.sub RNE x13 (fp.mul RNE (fp.mul RNE x7 x11) (fp.abs x13))))) (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x1 x9) (fp.abs x4)) (fp.mul RNE (fp.add RNE x12 x7) (fp.mul RNE x2 x8))) (fp.add RNE (fp.neg (fp.sub RNE x2 x0)) (fp.sub RNE (fp.mul RNE x5 x1) (fp.sub RNE x3 x6)))) (fp.sub RNE (fp.neg (fp.abs x5)) (fp.abs (fp.neg (fp.mul RNE x3 x12)))))) (fp.neg (fp.abs (fp.add RNE (fp.mul RNE x1 (fp.mul RNE (fp.abs x0) x12)) (fp.neg (fp.add RNE (fp.sub RNE x9 x5) (fp.sub RNE x11 x14)))))))) (fp.mul RNE (fp.add RNE (fp.abs (fp.neg (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.abs x11) (fp.neg x9)) (fp.neg (fp.neg x13))) (fp.add RNE (fp.add RNE x10 (fp.add RNE x10 x6)) (fp.neg (fp.sub RNE x7 x0)))))) (fp.sub RNE (fp.neg (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.add RNE x11 x14) (fp.mul RNE x12 x5)) (fp.mul RNE (fp.mul RNE x8 x10) (fp.add RNE x6 x11))) (fp.abs x10))) (fp.neg (fp.mul RNE (fp.neg x8) (fp.mul RNE (fp.sub RNE x14 (fp.mul RNE x5 x4)) (fp.mul RNE (fp.add RNE x5 x10) (fp.add RNE x7 x0))))))) (fp.sub RNE (fp.neg x13) (fp.mul RNE x0 x11))))))
(check-sat)
;  time  = 600
;  terms = 57
;  score = 0.7682926829268293
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.isSubnormal (fp.mul RNE (fp.mul RNE (fp.abs (fp.neg x7)) x13) (fp.add RNE (fp.sub RNE x8 (fp.add RNE (fp.mul RNE x13 (fp.abs (fp.add RNE (fp.mul RNE (fp.neg x13) (fp.sub RNE x9 x8)) (fp.sub RNE (fp.abs x2) (fp.add RNE x1 x12))))) (fp.add RNE (fp.abs (fp.abs (fp.sub RNE (fp.neg x6) (fp.sub RNE x14 x4)))) (fp.sub RNE (fp.sub RNE (fp.neg (fp.neg x7)) (fp.add RNE (fp.sub RNE x13 x7) (fp.mul RNE x12 x0))) (fp.sub RNE x14 (fp.neg (fp.neg x1))))))) (fp.abs (fp.sub RNE x8 x6))))))
(check-sat)
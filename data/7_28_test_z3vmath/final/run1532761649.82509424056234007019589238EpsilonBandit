;  time  = {'mathsat': 11.526552677154541, 'z3': 434.21}
;  terms = 62
;  score = 422.68344732284544
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.sqrt RNE (fp.div RNE (fp.sub RNE (fp.roundToIntegral RNE (fp.div RNE x8 x1)) (fp.add RNE (fp.div RNE x3 x0) (fp.max x5 x1))) (fp.sub RNE (fp.mul RNE (fp.add RNE x9 x5) (fp.div RNE x7 x8)) (fp.abs (fp.mul RNE x1 x9))))) (fp.max (fp.abs (fp.sqrt RNE (fp.max (fp.min x9 x9) (fp.mul RNE x4 x0)))) (fp.sub RNE (fp.sub RNE (fp.mul RNE (fp.abs x7) (fp.max x6 x7)) (fp.abs (fp.sqrt RNE x9))) (fp.min (fp.min (fp.neg x0) (fp.div RNE x2 x2)) (fp.mul RNE (fp.max x9 x3) (fp.mul RNE x5 x2)))))))(check-sat)
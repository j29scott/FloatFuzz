;  time  = {'mathsat': 20.44290018081665, 'z3': 168.877}
;  terms = 53
;  score = 148.43409981918336
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isNormal (fp.mul RNE (fp.max (fp.neg (fp.roundToIntegral RNE (fp.roundToIntegral RNE x5))) (fp.sqrt RNE (fp.mul RNE (fp.neg x9) (fp.min (fp.max x0 x4) (fp.mul RNE x2 x1))))) (fp.add RNE (fp.div RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x0 x7) (fp.sub RNE x6 x3)) (fp.abs (fp.mul RNE x8 x0))) (fp.add RNE (fp.max (fp.div RNE x1 x8) (fp.abs x1)) (fp.roundToIntegral RNE (fp.mul RNE x0 x9)))) (fp.sqrt RNE (fp.min (fp.neg (fp.sub RNE x0 x0)) (fp.abs (fp.div RNE x8 x0))))))))(check-sat)
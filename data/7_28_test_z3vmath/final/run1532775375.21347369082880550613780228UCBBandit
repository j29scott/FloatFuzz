;  time  = {'z3': 201.327, 'mathsat': 3.9917075634002686}
;  terms = 60
;  score = 197.33529243659973
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.abs (fp.abs (fp.add RNE x7 x0))) (fp.abs (fp.div RNE (fp.add RNE x8 x2) (fp.mul RNE x6 x5)))) (fp.div RNE (fp.sqrt RNE (fp.add RNE (fp.abs x1) (fp.abs x9))) (fp.add RNE (fp.abs (fp.sub RNE x5 x1)) (fp.add RNE (fp.abs x3) (fp.min x2 x7))))) (fp.max (fp.sqrt RNE (fp.abs (fp.neg (fp.sub RNE x6 x0)))) (fp.add RNE (fp.sub RNE (fp.div RNE (fp.abs x9) (fp.sub RNE x9 x4)) (fp.min (fp.div RNE x6 x3) (fp.div RNE x3 x4))) (fp.neg (fp.abs (fp.abs x5)))))))(check-sat)
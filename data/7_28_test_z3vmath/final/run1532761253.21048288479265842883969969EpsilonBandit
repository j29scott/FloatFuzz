;  time  = {'mathsat': 30.44326138496399, 'z3': 313.693}
;  terms = 71
;  score = 283.249738615036
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.max x4 x8) (fp.div RNE x9 x8)) (fp.min (fp.add RNE x0 x6) (fp.add RNE x6 (fp.div RNE x0 x8)))) (fp.add RNE (fp.abs (fp.max x6 x1)) (fp.mul RNE (fp.abs x4) (fp.abs x1)))) (fp.div RNE (fp.min (fp.max (fp.max x3 x7) (fp.sub RNE x2 x6)) (fp.roundToIntegral RNE (fp.add RNE x2 (fp.max x5 x1)))) (fp.abs (fp.min (fp.add RNE x2 (fp.sub RNE x4 x9)) (fp.sub RNE x1 x7))))) (fp.abs (fp.roundToIntegral RNE (fp.add RNE (fp.sub RNE (fp.add RNE x0 x5) (fp.add RNE x8 (fp.max x5 x0))) (fp.sqrt RNE (fp.mul RNE x0 x9)))))))(check-sat)
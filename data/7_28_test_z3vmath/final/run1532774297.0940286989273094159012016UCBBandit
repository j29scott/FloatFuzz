;  time  = {'mathsat': 9.878491878509521, 'z3': 176.667}
;  terms = 60
;  score = 166.78850812149048
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.lt (fp.roundToIntegral RNE (fp.mul RNE (fp.add RNE (fp.abs (fp.div RNE x2 x8)) (fp.max (fp.abs x0) (fp.sub RNE x9 x1))) (fp.neg (fp.sub RNE (fp.div RNE x6 x5) (fp.sqrt RNE x3))))) (fp.div RNE (fp.div RNE (fp.roundToIntegral RNE (fp.min (fp.mul RNE x2 x6) (fp.mul RNE x5 x5))) (fp.abs (fp.min (fp.roundToIntegral RNE x2) (fp.roundToIntegral RNE x5)))) (fp.mul RNE (fp.abs (fp.div RNE (fp.div RNE x3 x1) (fp.neg x1))) (fp.div RNE (fp.div RNE (fp.sub RNE x2 x0) (fp.mul RNE x6 x4)) (fp.max (fp.min x2 x2) (fp.min x0 x4)))))))(check-sat)
;  time  = {'z3': 366.999, 'mathsat': 3.9622156620025635}
;  terms = 78
;  score = 363.03678433799746
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.lt (fp.mul RNE (fp.sqrt RNE (fp.div RNE (fp.sub RNE (fp.add RNE x5 x3) (fp.mul RNE x7 x9)) (fp.abs (fp.abs x7)))) (fp.div RNE (fp.neg (fp.min (fp.sqrt RNE x0) (fp.max x2 x2))) (fp.max (fp.max (fp.roundToIntegral RNE x9) (fp.min x7 (fp.div RNE x0 x4))) (fp.div RNE (fp.neg x1) (fp.mul RNE x9 x2))))) (fp.add RNE (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE x2 x5) (fp.div RNE x2 x4)) (fp.roundToIntegral RNE (fp.mul RNE x2 x5))) (fp.add RNE (fp.abs (fp.abs x9)) (fp.add RNE (fp.roundToIntegral RNE x8) (fp.mul RNE x7 x2)))) (fp.roundToIntegral RNE (fp.min (fp.abs (fp.mul RNE x4 x7)) (fp.min (fp.div RNE x6 x5) (fp.min (fp.mul RNE x3 x6) (fp.div RNE x2 x6))))))))(check-sat)
;  time  = {'mathsat': 10.51641321182251, 'z3': 146.417}
;  terms = 59
;  score = 135.9005867881775
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.lt (fp.sqrt RNE (fp.sub RNE (fp.sqrt RNE (fp.min (fp.div RNE x8 x8) (fp.div RNE x1 x3))) (fp.abs (fp.sub RNE (fp.mul RNE x3 x2) (fp.abs x5))))) (fp.div RNE (fp.roundToIntegral RNE (fp.mul RNE (fp.abs (fp.roundToIntegral RNE x1)) (fp.div RNE (fp.abs x8) (fp.div RNE x6 x8)))) (fp.sub RNE (fp.abs (fp.div RNE (fp.roundToIntegral RNE x2) (fp.min x3 x4))) (fp.min (fp.neg (fp.mul RNE (fp.max x1 x7) (fp.abs x7))) (fp.sub RNE (fp.min (fp.sqrt RNE x1) (fp.max x4 x2)) (fp.mul RNE (fp.div RNE x6 x2) (fp.neg x4))))))))(check-sat)
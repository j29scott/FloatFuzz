;  time  = {'z3': 226.541, 'mathsat': 1.7402160167694092}
;  terms = 53
;  score = 224.8007839832306
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.leq (fp.roundToIntegral RNE (fp.roundToIntegral RNE (fp.sqrt RNE (fp.div RNE (fp.neg x4) (fp.mul RNE x4 x7))))) (fp.div RNE (fp.add RNE (fp.mul RNE (fp.abs (fp.sqrt RNE x2)) (fp.neg (fp.abs x1))) (fp.mul RNE (fp.sub RNE (fp.sqrt RNE x6) (fp.mul RNE x8 x6)) (fp.max (fp.neg x4) (fp.sqrt RNE x1)))) (fp.add RNE (fp.mul RNE (fp.neg (fp.neg x6)) (fp.add RNE (fp.max x5 x1) (fp.neg x2))) (fp.max (fp.mul RNE (fp.min x3 x0) (fp.sub RNE x8 x0)) (fp.sqrt RNE (fp.neg x6)))))))(check-sat)
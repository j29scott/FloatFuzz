;  time  = {'z3': 54.236, 'mathsat': 1.789074420928955}
;  terms = 51
;  score = 52.44692557907104
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.roundToIntegral RNE (fp.roundToIntegral RNE (fp.add RNE (fp.min (fp.roundToIntegral RNE x6) (fp.max x3 x9)) (fp.mul RNE (fp.roundToIntegral RNE x2) (fp.div RNE x2 x9))))) (fp.mul RNE (fp.sqrt RNE (fp.max (fp.min (fp.max x4 x0) (fp.sqrt RNE (fp.sub RNE x5 x3))) (fp.abs (fp.neg x8)))) (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE x4 x6) (fp.div RNE x8 x4)) (fp.neg (fp.sqrt RNE x2))) (fp.add RNE (fp.roundToIntegral RNE (fp.mul RNE x6 x4)) (fp.neg (fp.div RNE x4 x7)))))))(check-sat)
;  time  = {'z3': 176.484, 'mathsat': 2.9246814250946045}
;  terms = 52
;  score = 173.5593185749054
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.leq (fp.roundToIntegral RNE (fp.sub RNE (fp.abs (fp.add RNE (fp.roundToIntegral RNE x3) (fp.mul RNE x2 x3))) (fp.div RNE (fp.min (fp.div RNE x5 x0) (fp.abs x0)) (fp.abs (fp.abs x7))))) (fp.mul RNE (fp.abs (fp.add RNE (fp.div RNE (fp.min x1 x1) (fp.max x8 x0)) (fp.div RNE (fp.abs x9) (fp.abs x8)))) (fp.mul RNE (fp.sqrt RNE (fp.abs (fp.neg x9))) (fp.min (fp.div RNE (fp.div RNE x7 x4) (fp.roundToIntegral RNE x5)) (fp.max (fp.abs x5) (fp.abs x2)))))))(check-sat)
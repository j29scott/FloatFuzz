;  time  = {'mathsat': 2.4678688049316406, 'z3': 135.647}
;  terms = 57
;  score = 133.17913119506835
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.sqrt RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x5 x8) (fp.sub RNE x8 (fp.sub RNE x5 x8))) (fp.sqrt RNE (fp.neg (fp.sub RNE x8 x5)))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x9 x6) (fp.sub RNE x7 (fp.min x9 x4))) (fp.roundToIntegral RNE (fp.sub RNE x1 (fp.mul RNE x0 x8)))))) (fp.sqrt RNE (fp.add RNE (fp.abs (fp.div RNE (fp.abs x4) (fp.sub RNE x3 (fp.div RNE x2 x8)))) (fp.min (fp.div RNE (fp.sub RNE x7 x7) (fp.div RNE x6 x2)) (fp.abs (fp.add RNE x0 x5)))))))(check-sat)
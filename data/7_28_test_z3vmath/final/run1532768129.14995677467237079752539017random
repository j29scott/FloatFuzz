;  time  = {'mathsat': 3.3781707286834717, 'z3': 582.845}
;  terms = 54
;  score = 579.4668292713166
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isPositive (fp.div RNE (fp.sub RNE (fp.add RNE (fp.min (fp.mul RNE x0 (fp.abs x1)) (fp.div RNE x8 x3)) (fp.mul RNE (fp.add RNE x4 (fp.roundToIntegral RNE x6)) (fp.add RNE (fp.abs x2) (fp.div RNE x3 x7)))) (fp.add RNE (fp.mul RNE (fp.neg x1) (fp.mul RNE x2 x9)) (fp.mul RNE (fp.sub RNE x7 x5) (fp.roundToIntegral RNE x4)))) (fp.sqrt RNE (fp.mul RNE (fp.div RNE (fp.div RNE x8 x0) (fp.min x6 (fp.mul RNE x9 x9))) (fp.min (fp.div RNE x0 x3) (fp.abs (fp.sqrt RNE x2))))))))(check-sat)
;  time  = {'z3': 178.75, 'mathsat': 3.2241556644439697}
;  terms = 65
;  score = 175.52584433555603
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.abs (fp.add RNE (fp.abs x1) (fp.add RNE x5 x9))) (fp.neg (fp.neg (fp.abs x4)))) (fp.div RNE (fp.div RNE (fp.mul RNE (fp.neg x3) (fp.sqrt RNE x5)) (fp.roundToIntegral RNE (fp.min x4 x4))) (fp.sqrt RNE (fp.sub RNE (fp.div RNE x8 x5) (fp.sqrt RNE x1))))) (fp.max (fp.sqrt RNE (fp.neg (fp.add RNE (fp.mul RNE x8 x4) (fp.neg x9)))) (fp.mul RNE (fp.mul RNE (fp.neg (fp.abs x7)) (fp.add RNE (fp.min x3 x3) (fp.add RNE x0 x7))) (fp.div RNE (fp.min (fp.roundToIntegral RNE x6) (fp.abs x0)) (fp.sub RNE (fp.sqrt RNE x7) (fp.mul RNE x3 x6)))))))(check-sat)
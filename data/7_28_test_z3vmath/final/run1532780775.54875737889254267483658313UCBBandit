;  time  = {'z3': 284.725, 'mathsat': 3.124831438064575}
;  terms = 75
;  score = 281.60016856193545
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.mul RNE (fp.roundToIntegral RNE (fp.min (fp.div RNE (fp.max x0 x8) (fp.mul RNE x1 x8)) (fp.abs (fp.abs x9)))) (fp.div RNE (fp.max (fp.max (fp.abs x8) (fp.sqrt RNE x7)) (fp.mul RNE (fp.sub RNE x0 x4) (fp.div RNE x7 x4))) (fp.max (fp.max (fp.mul RNE x9 x2) (fp.div RNE x4 x2)) (fp.add RNE (fp.sub RNE x5 x6) (fp.min x7 x8))))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.div RNE (fp.sqrt RNE x5) (fp.neg x5)) (fp.mul RNE (fp.mul RNE x2 x1) (fp.min x1 x4))) (fp.max (fp.mul RNE (fp.neg x5) (fp.neg x0)) (fp.roundToIntegral RNE (fp.abs x9)))) (fp.sqrt RNE (fp.sqrt RNE (fp.sub RNE (fp.abs x8) (fp.mul RNE x9 x7)))))))(check-sat)
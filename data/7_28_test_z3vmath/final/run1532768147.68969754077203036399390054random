;  time  = {'z3': 142.547, 'mathsat': 2.407844066619873}
;  terms = 59
;  score = 140.13915593338012
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isNormal (fp.min (fp.mul RNE (fp.div RNE (fp.max (fp.max x6 x0) (fp.sqrt RNE x5)) (fp.sub RNE (fp.min (fp.abs x2) (fp.add RNE x9 x2)) (fp.abs (fp.roundToIntegral RNE x5)))) (fp.sub RNE (fp.min (fp.mul RNE x1 x8) (fp.abs x3)) (fp.mul RNE (fp.sqrt RNE x9) (fp.div RNE x0 x4)))) (fp.add RNE (fp.min (fp.abs (fp.mul RNE x6 x5)) (fp.mul RNE (fp.roundToIntegral RNE x3) (fp.mul RNE x9 x8))) (fp.mul RNE (fp.div RNE (fp.roundToIntegral RNE x3) (fp.add RNE x5 x0)) (fp.add RNE (fp.div RNE x1 x4) (fp.div RNE x6 x0)))))))(check-sat)
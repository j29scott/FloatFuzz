;  time  = {'z3': 357.172, 'mathsat': 8.43194842338562}
;  terms = 68
;  score = 348.7400515766144
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.lt (fp.div RNE (fp.abs (fp.mul RNE (fp.abs (fp.div RNE x0 x9)) (fp.sqrt RNE (fp.abs x0)))) (fp.div RNE (fp.div RNE (fp.sqrt RNE (fp.min x6 x3)) (fp.add RNE (fp.mul RNE x5 x8) (fp.max x9 x3))) (fp.min (fp.roundToIntegral RNE (fp.sub RNE x1 x2)) (fp.mul RNE (fp.sqrt RNE x6) (fp.neg x0))))) (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.abs (fp.abs x8)) (fp.add RNE (fp.min x2 x1) (fp.min x7 x9))) (fp.min (fp.sub RNE (fp.roundToIntegral RNE x4) (fp.mul RNE x4 x7)) (fp.div RNE (fp.add RNE x7 x4) (fp.sqrt RNE x8)))) (fp.sqrt RNE (fp.neg (fp.mul RNE (fp.mul RNE x5 x6) (fp.sqrt RNE x3)))))))(check-sat)
;  time  = {'z3': 231.029, 'mathsat': 27.68095088005066}
;  terms = 58
;  score = 203.34804911994934
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.min (fp.roundToIntegral RNE (fp.neg (fp.neg (fp.min x6 x3)))) (fp.add RNE (fp.sub RNE (fp.roundToIntegral RNE (fp.sub RNE x6 x0)) (fp.div RNE (fp.sub RNE x5 x2) (fp.sqrt RNE x6))) (fp.abs (fp.add RNE (fp.roundToIntegral RNE x4) (fp.max x9 x0))))) (fp.mul RNE (fp.roundToIntegral RNE (fp.roundToIntegral RNE (fp.add RNE (fp.sub RNE x6 x9) (fp.mul RNE x4 x9)))) (fp.sub RNE (fp.abs (fp.max (fp.sqrt RNE x8) (fp.neg x4))) (fp.mul RNE (fp.div RNE (fp.div RNE x3 x5) (fp.roundToIntegral RNE x7)) (fp.min (fp.div RNE x8 x4) (fp.div RNE x2 x7)))))))(check-sat)
;  time  = {'mathsat': 2.7793750762939453, 'z3': 181.341}
;  terms = 58
;  score = 178.56162492370606
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isNormal (fp.div RNE (fp.sub RNE (fp.neg (fp.sub RNE (fp.abs x3) (fp.mul RNE x1 x5))) (fp.min (fp.min (fp.sqrt RNE x2) (fp.mul RNE x9 x0)) (fp.div RNE (fp.div RNE (fp.max x1 x9) (fp.min x3 x5)) (fp.mul RNE (fp.sub RNE x8 x9) (fp.div RNE x8 x9))))) (fp.min (fp.sub RNE (fp.neg (fp.sub RNE x7 x8)) (fp.sub RNE (fp.min x8 (fp.mul RNE x7 x0)) (fp.min x8 (fp.roundToIntegral RNE x0)))) (fp.mul RNE (fp.mul RNE (fp.min x2 x7) (fp.abs x0)) (fp.neg (fp.neg x2)))))))(check-sat)
;  time  = {'mathsat': 15.011319637298584, 'z3': 56.51}
;  terms = 65
;  score = 41.498680362701414
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.leq (fp.add RNE (fp.sqrt RNE (fp.add RNE (fp.abs (fp.min x4 x9)) (fp.div RNE (fp.max x9 x7) (fp.add RNE x5 x9)))) (fp.div RNE (fp.min (fp.div RNE (fp.roundToIntegral RNE x3) (fp.add RNE x4 x2)) (fp.max (fp.mul RNE x3 x7) (fp.roundToIntegral RNE x7))) (fp.mul RNE (fp.sub RNE (fp.div RNE x7 x9) (fp.sub RNE x1 x0)) (fp.max (fp.add RNE x1 x9) (fp.mul RNE x3 x0))))) (fp.div RNE (fp.sqrt RNE (fp.abs (fp.add RNE (fp.roundToIntegral RNE x1) (fp.add RNE x4 x5)))) (fp.sqrt RNE (fp.min (fp.neg (fp.roundToIntegral RNE x6)) (fp.add RNE (fp.min x7 x8) (fp.sub RNE x0 x1)))))))(check-sat)
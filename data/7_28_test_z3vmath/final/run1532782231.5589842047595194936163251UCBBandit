;  time  = {'z3': 190.379, 'mathsat': 2.5737669467926025}
;  terms = 60
;  score = 187.8052330532074
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.abs (fp.mul RNE (fp.mul RNE (fp.max (fp.abs x2) (fp.div RNE x2 x1)) (fp.abs (fp.neg x9))) (fp.neg (fp.neg (fp.abs x9))))) (fp.add RNE (fp.sub RNE (fp.max (fp.abs (fp.roundToIntegral RNE x0)) (fp.sub RNE (fp.max x6 x8) (fp.sqrt RNE x3))) (fp.neg (fp.mul RNE (fp.max x7 x7) (fp.abs x2)))) (fp.sub RNE (fp.max (fp.roundToIntegral RNE (fp.div RNE x5 x3)) (fp.sub RNE (fp.add RNE x3 x3) (fp.neg x9))) (fp.div RNE (fp.add RNE (fp.mul RNE x5 x6) (fp.mul RNE x8 x5)) (fp.abs (fp.max x5 x4)))))))(check-sat)
;  time  = {'mathsat': 2.374755620956421, 'z3': 122.095}
;  terms = 74
;  score = 119.72024437904358
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.max (fp.min (fp.neg (fp.roundToIntegral RNE (fp.div RNE x9 x7))) (fp.add RNE (fp.add RNE (fp.add RNE x0 x3) (fp.sub RNE x7 x1)) (fp.max (fp.sqrt RNE x2) (fp.min x2 x6)))) (fp.neg (fp.div RNE (fp.sqrt RNE (fp.min x3 x2)) (fp.mul RNE (fp.add RNE x6 x2) (fp.neg x3))))) (fp.sub RNE (fp.add RNE (fp.div RNE (fp.mul RNE (fp.neg x6) (fp.max x7 x2)) (fp.add RNE (fp.add RNE x5 x0) (fp.add RNE x6 x0))) (fp.add RNE (fp.sqrt RNE (fp.div RNE x5 x5)) (fp.abs (fp.max x5 x2)))) (fp.sqrt RNE (fp.sub RNE (fp.min (fp.sub RNE x6 x1) (fp.min x3 x8)) (fp.min (fp.mul RNE x8 x4) (fp.sqrt RNE x2)))))))(check-sat)
;  time  = {'z3': 180.816, 'mathsat': 16.973769187927246}
;  terms = 55
;  score = 163.84223081207276
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.sqrt RNE (fp.sub RNE (fp.mul RNE x7 x9) (fp.div RNE x6 x8))) (fp.sub RNE (fp.add RNE (fp.sub RNE x8 x3) (fp.abs x3)) (fp.sqrt RNE (fp.mul RNE x2 x7)))) (fp.sqrt RNE (fp.add RNE (fp.abs (fp.mul RNE x3 x8)) (fp.mul RNE (fp.add RNE x2 x0) (fp.sqrt RNE x9))))) (fp.div RNE (fp.neg (fp.add RNE (fp.abs (fp.sub RNE x2 x1)) (fp.sqrt RNE (fp.roundToIntegral RNE x1)))) (fp.neg (fp.add RNE (fp.neg (fp.abs x7)) (fp.min (fp.abs x7) (fp.mul RNE x5 x7)))))))(check-sat)
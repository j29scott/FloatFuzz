;  time  = {'mathsat': 6.927023649215698, 'z3': 271.743}
;  terms = 93
;  score = 264.8159763507843
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.min (fp.max x1 x1) (fp.neg x8)) (fp.sqrt RNE (fp.max x0 x8))) (fp.sub RNE (fp.div RNE (fp.min x6 x3) (fp.neg x8)) (fp.sqrt RNE (fp.neg x2)))) (fp.div RNE (fp.div RNE (fp.sub RNE (fp.mul RNE x0 x5) (fp.div RNE x9 x8)) (fp.sub RNE (fp.neg x5) (fp.roundToIntegral RNE x9))) (fp.add RNE (fp.roundToIntegral RNE (fp.add RNE x5 x8)) (fp.neg (fp.sqrt RNE x0))))) (fp.min (fp.div RNE (fp.mul RNE (fp.sqrt RNE (fp.mul RNE x2 x4)) (fp.sub RNE (fp.min x5 x4) (fp.mul RNE x5 x3))) (fp.sub RNE (fp.add RNE (fp.min x0 x4) (fp.max x9 x1)) (fp.mul RNE (fp.add RNE x3 x3) (fp.mul RNE x7 x8)))) (fp.add RNE (fp.roundToIntegral RNE (fp.sqrt RNE (fp.sqrt RNE x4))) (fp.mul RNE (fp.add RNE (fp.neg x5) (fp.max x4 x3)) (fp.min (fp.neg x4) (fp.add RNE x4 x0)))))))(check-sat)
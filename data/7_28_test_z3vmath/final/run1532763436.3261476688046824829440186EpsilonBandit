;  time  = {'z3': 226.85, 'mathsat': 25.346043348312378}
;  terms = 53
;  score = 201.50395665168762
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isSubnormal (fp.div RNE (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.abs x1) (fp.sub RNE x5 x1)) (fp.mul RNE (fp.abs x5) (fp.abs x8))) (fp.add RNE (fp.mul RNE (fp.add RNE x8 x5) (fp.div RNE x2 x1)) (fp.abs (fp.abs x4)))) (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.sqrt RNE x2) (fp.mul RNE x7 x8)) (fp.div RNE (fp.abs x1) (fp.abs x1))) (fp.abs (fp.sub RNE (fp.add RNE (fp.add RNE x1 x1) (fp.max x1 x8)) (fp.add RNE (fp.roundToIntegral RNE x8) (fp.abs x4))))))))(check-sat)
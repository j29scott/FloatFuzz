;  time  = {'z3': 285.917, 'mathsat': 3.001542568206787}
;  terms = 69
;  score = 282.9154574317932
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.div RNE (fp.abs (fp.sub RNE (fp.div RNE (fp.mul RNE x4 x6) (fp.abs x9)) (fp.sqrt RNE (fp.sub RNE x8 x8)))) (fp.abs (fp.mul RNE (fp.abs (fp.abs x6)) (fp.roundToIntegral RNE (fp.max x5 x7))))) (fp.max (fp.add RNE (fp.min (fp.div RNE (fp.abs x4) (fp.sqrt RNE (fp.neg x1))) (fp.mul RNE (fp.div RNE x8 (fp.min x1 x4)) (fp.sub RNE x2 x9))) (fp.sub RNE (fp.abs (fp.sqrt RNE x7)) (fp.abs (fp.neg x3)))) (fp.add RNE (fp.mul RNE (fp.neg (fp.abs x4)) (fp.add RNE (fp.neg x3) (fp.min x8 x4))) (fp.abs (fp.mul RNE (fp.div RNE x6 (fp.mul RNE x7 x3)) (fp.max x2 x4)))))))(check-sat)
;  time  = {'z3': 125.312, 'mathsat': 6.660546064376831}
;  terms = 56
;  score = 118.65145393562317
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isZero (fp.max (fp.max (fp.mul RNE (fp.add RNE (fp.sub RNE x9 x0) (fp.roundToIntegral RNE x2)) (fp.sqrt RNE (fp.abs x4))) (fp.add RNE (fp.mul RNE (fp.add RNE x9 x6) (fp.roundToIntegral RNE (fp.neg x5))) (fp.sub RNE (fp.max (fp.div RNE x8 x2) (fp.sub RNE x8 x9)) (fp.abs (fp.mul RNE x3 x0))))) (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.add RNE x1 x7) (fp.neg x1)) (fp.min (fp.neg x6) (fp.sub RNE x3 x7))) (fp.neg (fp.min (fp.div RNE x1 (fp.div RNE x5 x4)) (fp.roundToIntegral RNE x8)))))))(check-sat)
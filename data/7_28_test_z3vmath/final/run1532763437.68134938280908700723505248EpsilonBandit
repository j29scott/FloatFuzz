;  time  = {'z3': 243.928, 'mathsat': 45.651477575302124}
;  terms = 66
;  score = 198.27652242469787
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.neg (fp.abs (fp.abs x4))) (fp.div RNE (fp.sqrt RNE (fp.max x2 x4)) (fp.neg (fp.roundToIntegral RNE x5)))) (fp.sub RNE (fp.abs (fp.div RNE (fp.roundToIntegral RNE x9) (fp.abs x8))) (fp.sub RNE (fp.abs (fp.min x1 x1)) (fp.min (fp.abs x9) (fp.add RNE x4 x2))))) (fp.sub RNE (fp.mul RNE (fp.neg (fp.sub RNE (fp.add RNE x8 x1) (fp.min x8 x0))) (fp.roundToIntegral RNE (fp.abs (fp.max x5 x9)))) (fp.mul RNE (fp.min (fp.add RNE (fp.abs x3) (fp.sub RNE x6 x1)) (fp.abs (fp.abs x6))) (fp.abs (fp.add RNE (fp.mul RNE x6 x0) (fp.sqrt RNE x7)))))))(check-sat)
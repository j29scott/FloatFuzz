;  time  = {'z3': 449.401, 'mathsat': 14.531500101089478}
;  terms = 58
;  score = 434.86949989891053
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.sqrt RNE (fp.mul RNE (fp.div RNE (fp.add RNE (fp.roundToIntegral RNE x2) (fp.min x5 x7)) (fp.add RNE (fp.div RNE x3 x4) (fp.div RNE x8 x5))) (fp.mul RNE (fp.min (fp.sqrt RNE x9) (fp.div RNE x0 (fp.min x6 x0))) (fp.sub RNE (fp.sqrt RNE x2) (fp.max x6 x9))))) (fp.add RNE (fp.abs (fp.div RNE (fp.mul RNE (fp.max x9 x7) (fp.sqrt RNE x3)) (fp.div RNE (fp.sqrt RNE x1) (fp.abs x1)))) (fp.neg (fp.div RNE (fp.div RNE (fp.sqrt RNE x0) (fp.abs x6)) (fp.min (fp.sqrt RNE x5) (fp.neg x2)))))))(check-sat)
;  time  = {'z3': 109.333, 'mathsat': 5.100646495819092}
;  terms = 72
;  score = 104.2323535041809
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.lt (fp.sqrt RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE x1 x5) (fp.abs x3)) (fp.neg (fp.add RNE x5 x6))) (fp.max (fp.div RNE (fp.div RNE x2 x2) (fp.sqrt RNE x3)) (fp.max (fp.neg x5) (fp.neg x2))))) (fp.min (fp.min (fp.min (fp.max (fp.roundToIntegral RNE x8) (fp.neg x8)) (fp.sqrt RNE (fp.mul RNE x6 x6))) (fp.neg (fp.div RNE (fp.neg x0) (fp.abs x9)))) (fp.max (fp.neg (fp.div RNE (fp.sub RNE x1 x6) (fp.max x9 x6))) (fp.min (fp.sqrt RNE (fp.sub RNE x3 x8)) (fp.add RNE (fp.div RNE (fp.add RNE x0 x2) (fp.neg x4)) (fp.add RNE (fp.mul RNE x2 x6) (fp.min x7 x2))))))))(check-sat)
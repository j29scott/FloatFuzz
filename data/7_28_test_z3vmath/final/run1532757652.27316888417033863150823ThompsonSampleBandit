;  time  = {'z3': 125.534, 'mathsat': 1.929405689239502}
;  terms = 58
;  score = 123.6045943107605
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.max (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.max x9 x4) (fp.neg x8)) (fp.abs (fp.mul RNE x7 x1))) (fp.sqrt RNE (fp.div RNE (fp.abs x3) (fp.sub RNE x0 x5)))) (fp.abs (fp.mul RNE (fp.add RNE (fp.neg x0) (fp.abs x2)) (fp.mul RNE (fp.max x6 x3) (fp.abs x9))))) (fp.abs (fp.max (fp.add RNE (fp.max (fp.abs x4) (fp.abs x5)) (fp.sqrt RNE (fp.div RNE x2 x3))) (fp.mul RNE (fp.add RNE (fp.div RNE x3 x7) (fp.div RNE x8 x6)) (fp.abs (fp.add RNE x6 x3)))))))(check-sat)
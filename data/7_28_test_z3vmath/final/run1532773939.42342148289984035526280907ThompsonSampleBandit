;  time  = {'mathsat': 10.826206684112549, 'z3': 151.229}
;  terms = 61
;  score = 140.40279331588746
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.add RNE (fp.mul RNE (fp.abs x6) (fp.add RNE x4 x9)) (fp.add RNE (fp.sub RNE x4 x7) (fp.abs x6)))) (fp.abs (fp.div RNE (fp.sqrt RNE (fp.sub RNE x7 x5)) (fp.abs (fp.div RNE x1 x3))))) (fp.max (fp.max (fp.sqrt RNE (fp.div RNE (fp.add RNE x4 x7) (fp.max x4 x4))) (fp.sub RNE (fp.mul RNE (fp.abs x5) (fp.abs x0)) (fp.min (fp.min x4 x3) (fp.sqrt RNE x8)))) (fp.mul RNE (fp.abs (fp.add RNE (fp.abs x1) (fp.div RNE x7 x2))) (fp.sqrt RNE (fp.neg (fp.max x4 x4)))))))(check-sat)
;  time  = {'z3': 294.729, 'mathsat': 4.009605646133423}
;  terms = 73
;  score = 290.71939435386656
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.min (fp.max (fp.div RNE (fp.div RNE (fp.add RNE x1 x9) (fp.roundToIntegral RNE x6)) (fp.max (fp.max x6 x7) (fp.add RNE x3 x1))) (fp.roundToIntegral RNE (fp.abs (fp.mul RNE x5 x7)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.div RNE x3 x8) (fp.abs x8)) (fp.sub RNE (fp.sqrt RNE x5) (fp.max x4 x7))) (fp.max (fp.abs (fp.abs x8)) (fp.abs (fp.sqrt RNE x7))))) (fp.add RNE (fp.max (fp.sqrt RNE (fp.div RNE (fp.abs x1) (fp.roundToIntegral RNE x1))) (fp.div RNE (fp.neg (fp.sqrt RNE x1)) (fp.abs (fp.roundToIntegral RNE x2)))) (fp.div RNE (fp.abs (fp.mul RNE (fp.sqrt RNE x3) (fp.abs x5))) (fp.sqrt RNE (fp.max (fp.max x4 x1) (fp.mul RNE x0 x4)))))))(check-sat)
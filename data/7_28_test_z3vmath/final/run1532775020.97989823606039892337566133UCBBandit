;  time  = {'z3': 409.295, 'mathsat': 3.52785062789917}
;  terms = 80
;  score = 405.76714937210085
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.max (fp.mul RNE x6 x2) (fp.sub RNE x7 x5)) (fp.abs (fp.mul RNE x1 x3))) (fp.sub RNE (fp.roundToIntegral RNE (fp.sqrt RNE x8)) (fp.sub RNE (fp.sqrt RNE x5) (fp.abs x1)))) (fp.min (fp.abs (fp.add RNE (fp.max x3 x5) (fp.abs x0))) (fp.mul RNE (fp.sub RNE (fp.div RNE x0 x9) (fp.abs x1)) (fp.abs (fp.abs x5))))) (fp.mul RNE (fp.div RNE (fp.min (fp.sqrt RNE (fp.mul RNE x2 x1)) (fp.abs (fp.min x9 x7))) (fp.div RNE (fp.neg (fp.roundToIntegral RNE x5)) (fp.mul RNE (fp.abs x2) (fp.abs x5)))) (fp.div RNE (fp.abs (fp.max (fp.abs x2) (fp.abs x5))) (fp.mul RNE (fp.mul RNE (fp.sqrt RNE x3) (fp.div RNE x2 x2)) (fp.sqrt RNE (fp.mul RNE x9 x0)))))))(check-sat)
;  time  = {'z3': 222.244, 'mathsat': 9.00842809677124}
;  terms = 59
;  score = 213.23557190322876
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isNormal (fp.add RNE (fp.add RNE (fp.max (fp.mul RNE (fp.mul RNE x6 x8) (fp.min x9 x2)) (fp.div RNE (fp.sqrt RNE x5) (fp.mul RNE x5 x4))) (fp.sub RNE (fp.mul RNE (fp.roundToIntegral RNE x5) (fp.add RNE x0 x4)) (fp.div RNE (fp.mul RNE x7 x3) (fp.mul RNE x0 x8)))) (fp.min (fp.div RNE (fp.mul RNE (fp.min x8 x6) (fp.add RNE x0 x5)) (fp.div RNE (fp.add RNE (fp.mul RNE x5 x6) (fp.mul RNE x9 x0)) (fp.sqrt RNE (fp.sqrt RNE x6)))) (fp.roundToIntegral RNE (fp.min (fp.add RNE x4 x1) (fp.max x8 x0)))))))(check-sat)
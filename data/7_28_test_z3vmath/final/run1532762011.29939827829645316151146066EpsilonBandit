;  time  = {'z3': 408.957, 'mathsat': 30.619595289230347}
;  terms = 64
;  score = 378.33740471076965
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.abs (fp.abs (fp.max x2 x1))) (fp.add RNE (fp.sqrt RNE (fp.roundToIntegral RNE x3)) (fp.max (fp.div RNE x4 x2) (fp.sqrt RNE x0)))) (fp.div RNE (fp.min (fp.mul RNE (fp.add RNE x5 x7) (fp.sqrt RNE x8)) (fp.add RNE (fp.sub RNE x2 x0) (fp.abs x5))) (fp.neg (fp.sqrt RNE (fp.div RNE x5 (fp.sqrt RNE x7)))))) (fp.abs (fp.mul RNE (fp.add RNE (fp.neg (fp.min x9 x2)) (fp.div RNE (fp.div RNE x5 (fp.sqrt RNE x9)) (fp.roundToIntegral RNE x1))) (fp.min (fp.max (fp.sub RNE x0 x2) (fp.add RNE x2 x1)) (fp.abs (fp.add RNE x3 x6)))))))(check-sat)
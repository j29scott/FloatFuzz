;  time  = {'mathsat': 11.787955045700073, 'z3': 109.929}
;  terms = 61
;  score = 98.14104495429993
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isSubnormal (fp.min (fp.mul RNE (fp.abs (fp.min (fp.max x9 x6) (fp.sqrt RNE (fp.max x2 x3)))) (fp.min (fp.mul RNE (fp.abs x6) (fp.min x0 x5)) (fp.mul RNE (fp.div RNE x8 x2) (fp.min x1 x8)))) (fp.min (fp.add RNE (fp.mul RNE (fp.min x5 x5) (fp.sqrt RNE x1)) (fp.add RNE (fp.div RNE x4 x4) (fp.min x8 x8))) (fp.mul RNE (fp.max (fp.roundToIntegral RNE (fp.sub RNE x8 x9)) (fp.max (fp.add RNE x7 x9) (fp.max x2 x7))) (fp.neg (fp.div RNE (fp.add RNE x4 x3) (fp.neg x5))))))))(check-sat)
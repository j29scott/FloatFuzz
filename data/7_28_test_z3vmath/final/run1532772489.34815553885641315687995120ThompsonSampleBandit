;  time  = {'mathsat': 92.73346185684204, 'z3': 430.84}
;  terms = 105
;  score = 338.10653814315793
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.min (fp.min (fp.div RNE (fp.abs (fp.add RNE x8 x5)) (fp.sub RNE (fp.min x5 x5) (fp.abs x1))) (fp.min (fp.sub RNE (fp.sub RNE x6 x4) (fp.min x3 x7)) (fp.abs (fp.max x4 x9)))) (fp.min (fp.min (fp.min (fp.min x9 x8) (fp.neg x3)) (fp.abs (fp.min x6 (fp.max x1 x5)))) (fp.max (fp.min (fp.mul RNE x2 x1) (fp.mul RNE x4 x1)) (fp.min (fp.sub RNE x8 x8) (fp.min x6 (fp.sub RNE x4 x3)))))) (fp.div RNE (fp.div RNE (fp.min (fp.abs (fp.sub RNE x9 x6)) (fp.sqrt RNE (fp.max (fp.min x1 x0) (fp.mul RNE x5 x3)))) (fp.sqrt RNE (fp.max (fp.div RNE x0 x4) (fp.min x1 (fp.neg x9))))) (fp.div RNE (fp.max (fp.sqrt RNE (fp.min x7 (fp.roundToIntegral RNE x1))) (fp.roundToIntegral RNE (fp.sub RNE x9 x4))) (fp.div RNE (fp.min (fp.abs x5) (fp.sqrt RNE x7)) (fp.max (fp.max x5 x8) (fp.mul RNE x6 x2)))))))(check-sat)
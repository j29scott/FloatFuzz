;  time  = {'mathsat': 39.40019917488098, 'z3': 309.042}
;  terms = 75
;  score = 269.641800825119
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.sub RNE (fp.sqrt RNE (fp.min (fp.add RNE (fp.min x5 x0) (fp.neg x5)) (fp.sub RNE (fp.mul RNE x5 x6) (fp.add RNE x9 x2)))) (fp.div RNE (fp.max (fp.abs (fp.div RNE x8 x9)) (fp.neg (fp.div RNE x7 x5))) (fp.sqrt RNE (fp.min (fp.neg x6) (fp.abs x3))))) (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE (fp.abs x7) (fp.min x8 x9)) (fp.abs (fp.div RNE x3 x7))) (fp.sub RNE (fp.sqrt RNE (fp.add RNE x7 x4)) (fp.max (fp.div RNE x2 x2) (fp.abs x5)))) (fp.mul RNE (fp.abs (fp.mul RNE (fp.min x9 x5) (fp.abs x0))) (fp.max (fp.mul RNE (fp.abs x6) (fp.abs x6)) (fp.neg (fp.mul RNE x2 x8)))))))(check-sat)
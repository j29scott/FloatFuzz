;  time  = {'z3': 525.461, 'mathsat': 20.030101537704468}
;  terms = 54
;  score = 505.43089846229554
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isZero (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.min (fp.roundToIntegral RNE x0) (fp.mul RNE (fp.sub RNE x4 x2) (fp.sub RNE x1 x5))) (fp.add RNE (fp.div RNE (fp.sqrt RNE x2) (fp.add RNE x2 x8)) (fp.min (fp.mul RNE x1 x4) (fp.div RNE x8 x5)))) (fp.div RNE (fp.sub RNE (fp.div RNE x1 x6) (fp.abs (fp.mul RNE x4 x7))) (fp.add RNE (fp.neg x3) (fp.mul RNE x7 x9)))) (fp.abs (fp.add RNE (fp.mul RNE (fp.roundToIntegral RNE x4) (fp.min x9 x2)) (fp.sqrt RNE (fp.sqrt RNE x5)))))))(check-sat)
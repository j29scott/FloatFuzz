;  time  = {'z3': 285.489, 'mathsat': 8.294907093048096}
;  terms = 71
;  score = 277.1940929069519
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.lt (fp.min (fp.max (fp.sqrt RNE (fp.roundToIntegral RNE (fp.min x4 x2))) (fp.abs (fp.sub RNE (fp.abs x6) (fp.min x1 x8)))) (fp.add RNE (fp.div RNE (fp.abs (fp.min (fp.sub RNE x2 x1) (fp.sqrt RNE x8))) (fp.sqrt RNE (fp.add RNE (fp.mul RNE x4 x8) (fp.min x2 x6)))) (fp.sqrt RNE (fp.mul RNE (fp.min (fp.add RNE x8 x1) (fp.min x4 x0)) (fp.sqrt RNE (fp.div RNE x1 x8)))))) (fp.min (fp.abs (fp.abs (fp.abs (fp.mul RNE x4 x3)))) (fp.div RNE (fp.min (fp.sqrt RNE (fp.mul RNE x4 x5)) (fp.min (fp.mul RNE x3 x9) (fp.abs x2))) (fp.div RNE (fp.sqrt RNE (fp.abs x4)) (fp.abs (fp.abs x8)))))))(check-sat)
;  time  = {'z3': 275.263, 'mathsat': 8.564409732818604}
;  terms = 51
;  score = 266.6985902671814
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.abs (fp.sqrt RNE (fp.sqrt RNE (fp.div RNE (fp.neg x0) (fp.mul RNE (fp.div RNE x2 x0) (fp.min x0 x3)))))) (fp.add RNE (fp.roundToIntegral RNE (fp.sub RNE (fp.div RNE (fp.roundToIntegral RNE x9) (fp.roundToIntegral RNE x2)) (fp.min (fp.mul RNE x1 x6) (fp.roundToIntegral RNE x8)))) (fp.div RNE (fp.mul RNE (fp.div RNE (fp.max x9 x9) (fp.mul RNE x6 x4)) (fp.div RNE (fp.div RNE x8 x4) (fp.neg x2))) (fp.roundToIntegral RNE (fp.div RNE (fp.min x1 x4) (fp.max x3 x8)))))))(check-sat)
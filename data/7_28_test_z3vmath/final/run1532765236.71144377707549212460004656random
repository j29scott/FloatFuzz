;  time  = {'z3': 326.239, 'mathsat': 13.519838809967041}
;  terms = 57
;  score = 312.71916119003293
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.isSubnormal (fp.add RNE (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.sqrt RNE x1) (fp.max x6 x3)) (fp.sqrt RNE (fp.max x6 x7))) (fp.sub RNE (fp.max (fp.neg (fp.mul RNE x1 x3)) (fp.min (fp.max x6 x5) (fp.neg x2))) (fp.min (fp.max (fp.sqrt RNE x9) (fp.roundToIntegral RNE x1)) (fp.sub RNE (fp.abs x8) (fp.sub RNE x4 x8))))) (fp.roundToIntegral RNE (fp.add RNE (fp.add RNE (fp.sub RNE x4 (fp.max x7 x8)) (fp.div RNE x2 (fp.div RNE x9 x0))) (fp.mul RNE (fp.div RNE x4 x1) (fp.sqrt RNE x1)))))))(check-sat)
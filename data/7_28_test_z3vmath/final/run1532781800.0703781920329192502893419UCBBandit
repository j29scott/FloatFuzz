;  time  = {'mathsat': 6.093417644500732, 'z3': 123.204}
;  terms = 57
;  score = 117.11058235549926
;  stdout= {'mathsat': 'sat', 'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.roundToIntegral RNE (fp.sub RNE (fp.max x5 x8) (fp.abs x8))) (fp.mul RNE (fp.roundToIntegral RNE (fp.sqrt RNE x4)) (fp.mul RNE (fp.abs x3) (fp.add RNE x4 x1)))) (fp.neg (fp.abs (fp.abs (fp.mul RNE x5 x1))))) (fp.add RNE (fp.mul RNE (fp.max (fp.max (fp.sub RNE x9 x3) (fp.mul RNE x6 x1)) (fp.div RNE (fp.roundToIntegral RNE x5) (fp.min x8 x8))) (fp.abs (fp.sub RNE (fp.neg x7) (fp.abs x8)))) (fp.abs (fp.div RNE (fp.abs (fp.div RNE x8 x9)) (fp.abs (fp.neg x8)))))))(check-sat)
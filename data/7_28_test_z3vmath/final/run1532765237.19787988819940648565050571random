;  time  = {'z3': 336.73, 'mathsat': 6.624392747879028}
;  terms = 52
;  score = 330.105607252121
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.roundToIntegral RNE (fp.roundToIntegral RNE (fp.mul RNE (fp.div RNE (fp.sqrt RNE x9) (fp.mul RNE x7 x5)) (fp.mul RNE (fp.sub RNE x9 x8) (fp.div RNE x0 (fp.mul RNE x3 x6)))))) (fp.add RNE (fp.min (fp.neg (fp.mul RNE (fp.roundToIntegral RNE x3) (fp.max x1 x0))) (fp.neg (fp.div RNE (fp.max x8 x9) (fp.sqrt RNE x2)))) (fp.sub RNE (fp.mul RNE (fp.sqrt RNE (fp.abs x4)) (fp.max (fp.div RNE x5 x1) (fp.max x8 x2))) (fp.sqrt RNE (fp.sqrt RNE (fp.min x5 x2)))))))(check-sat)
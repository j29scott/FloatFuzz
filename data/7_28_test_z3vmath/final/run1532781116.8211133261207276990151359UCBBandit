;  time  = {'z3': 158.042, 'mathsat': 3.051541566848755}
;  terms = 57
;  score = 154.99045843315125
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.geq (fp.sqrt RNE (fp.sqrt RNE (fp.min (fp.add RNE (fp.div RNE x6 x3) (fp.div RNE x1 x2)) (fp.add RNE (fp.add RNE x8 x2) (fp.roundToIntegral RNE x8))))) (fp.sub RNE (fp.mul RNE (fp.max (fp.neg (fp.neg x1)) (fp.abs (fp.div RNE x4 x8))) (fp.sub RNE (fp.sqrt RNE (fp.abs x7)) (fp.roundToIntegral RNE (fp.max x3 x1)))) (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.min x0 x3) (fp.neg x4)) (fp.max (fp.add RNE x0 x6) (fp.sqrt RNE x3))) (fp.div RNE (fp.neg (fp.abs x6)) (fp.sqrt RNE (fp.add RNE x9 x9)))))))(check-sat)
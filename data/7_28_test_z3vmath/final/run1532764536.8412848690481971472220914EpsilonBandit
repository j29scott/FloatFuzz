;  time  = {'z3': 434.609, 'mathsat': 5.185563802719116}
;  terms = 72
;  score = 429.42343619728086
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.div RNE (fp.max (fp.abs x3) (fp.min x8 x5)) (fp.max (fp.div RNE (fp.add RNE x5 x1) (fp.abs x8)) (fp.add RNE (fp.div RNE x3 x9) (fp.roundToIntegral RNE x2)))) (fp.mul RNE (fp.abs (fp.div RNE x8 x4)) (fp.div RNE (fp.sub RNE x0 x9) (fp.abs (fp.neg x7))))) (fp.div RNE (fp.div RNE (fp.roundToIntegral RNE (fp.abs x2)) (fp.abs (fp.max x0 x8))) (fp.div RNE (fp.max (fp.div RNE (fp.abs x9) (fp.sub RNE x4 x2)) (fp.div RNE (fp.abs x9) (fp.add RNE x6 x7))) (fp.abs (fp.mul RNE (fp.max x2 x2) (fp.sub RNE x4 x8)))))) (fp.neg (fp.sqrt RNE (fp.abs (fp.sqrt RNE (fp.abs x2)))))))(check-sat)
;  time  = {'z3': 153.88, 'mathsat': 4.449984788894653}
;  terms = 69
;  score = 149.43001521110534
;  stdout= {'z3': 'sat\n', 'mathsat': 'sat'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.leq (fp.div RNE (fp.roundToIntegral RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x8 x4) (fp.max x9 (fp.roundToIntegral RNE x9))) (fp.div RNE (fp.roundToIntegral RNE x2) (fp.max x0 x5)))) (fp.add RNE (fp.sqrt RNE (fp.min (fp.max (fp.div RNE x4 x6) (fp.max x9 x1)) (fp.max (fp.mul RNE x4 x3) (fp.div RNE x6 x5)))) (fp.sqrt RNE (fp.div RNE (fp.abs (fp.max x5 x4)) (fp.mul RNE (fp.roundToIntegral RNE x0) (fp.max x9 x4)))))) (fp.abs (fp.roundToIntegral RNE (fp.mul RNE (fp.div RNE (fp.max x4 x0) (fp.div RNE (fp.add RNE x6 x5) (fp.neg x5))) (fp.sub RNE (fp.div RNE x8 x6) (fp.sub RNE x6 (fp.max x0 x4))))))))(check-sat)
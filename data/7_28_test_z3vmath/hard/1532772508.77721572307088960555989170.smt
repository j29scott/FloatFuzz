;  time  = {'z3': 600}
;  terms = 77
;  score = 600
;  stdout= {'z3': 'timeout\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.lt (fp.max (fp.max (fp.mul RNE (fp.add RNE (fp.div RNE x6 x7) (fp.max x8 x6)) (fp.sub RNE (fp.mul RNE x8 x4) (fp.mul RNE x5 x6))) (fp.add RNE (fp.roundToIntegral RNE (fp.abs x6)) (fp.max (fp.min x3 x7) (fp.div RNE x7 x5)))) (fp.mul RNE (fp.add RNE (fp.min (fp.abs x4) (fp.sqrt RNE x9)) (fp.abs (fp.min x3 x6))) (fp.sqrt RNE (fp.sub RNE (fp.max x2 x1) (fp.sub RNE x9 x0))))) (fp.div RNE (fp.abs (fp.min (fp.sub RNE (fp.abs x6) (fp.div RNE x8 x1)) (fp.mul RNE (fp.div RNE x2 x3) (fp.abs x8)))) (fp.abs (fp.add RNE (fp.sub RNE (fp.mul RNE x5 x7) (fp.abs x3)) (fp.mul RNE (fp.roundToIntegral RNE x5) (fp.sub RNE x2 x0)))))))(check-sat)
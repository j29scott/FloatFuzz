;  time  = {'z3': 600}
;  terms = 101
;  score = 600
;  stdout= {'z3': 'timeout\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.gt (fp.div RNE (fp.abs (fp.mul RNE (fp.div RNE (fp.div RNE x9 x2) (fp.roundToIntegral RNE x7)) (fp.neg (fp.div RNE x5 (fp.sub RNE x7 x1))))) (fp.sqrt RNE (fp.div RNE (fp.neg (fp.mul RNE (fp.abs x7) (fp.abs x7))) (fp.add RNE (fp.div RNE (fp.div RNE x7 x3) (fp.roundToIntegral RNE x2)) (fp.neg (fp.abs x3)))))) (fp.sub RNE (fp.div RNE (fp.abs (fp.div RNE (fp.div RNE x0 x7) (fp.div RNE x1 (fp.max x0 x2)))) (fp.add RNE (fp.max (fp.abs x5) (fp.mul RNE x0 x5)) (fp.sub RNE (fp.roundToIntegral RNE x4) (fp.abs (fp.abs x6))))) (fp.div RNE (fp.sub RNE (fp.div RNE (fp.div RNE (fp.min x6 x0) (fp.abs x4)) (fp.div RNE (fp.mul RNE x9 x9) (fp.sub RNE x5 x5))) (fp.div RNE (fp.neg (fp.div RNE x5 x5)) (fp.div RNE (fp.min x9 x2) (fp.neg x4)))) (fp.div RNE (fp.abs (fp.div RNE (fp.max x7 x3) (fp.abs x8))) (fp.abs (fp.add RNE (fp.sqrt RNE x4) (fp.mul RNE x2 x7))))))))(check-sat)
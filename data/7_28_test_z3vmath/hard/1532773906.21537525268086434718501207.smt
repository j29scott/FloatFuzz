;  time  = {'z3': 567.237}
;  terms = 76
;  score = 567.237
;  stdout= {'z3': 'sat\n'}
(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (not (fp.isNaN x0)))
(assert (not (fp.isInfinite x0)))
(assert (not (fp.isZero x0)))
(assert (not (fp.isNaN x1)))
(assert (not (fp.isInfinite x1)))
(assert (not (fp.isZero x1)))
(assert (not (fp.isNaN x2)))
(assert (not (fp.isInfinite x2)))
(assert (not (fp.isZero x2)))
(assert (not (fp.isNaN x3)))
(assert (not (fp.isInfinite x3)))
(assert (not (fp.isZero x3)))
(assert (not (fp.isNaN x4)))
(assert (not (fp.isInfinite x4)))
(assert (not (fp.isZero x4)))
(assert (not (fp.isNaN x5)))
(assert (not (fp.isInfinite x5)))
(assert (not (fp.isZero x5)))
(assert (not (fp.isNaN x6)))
(assert (not (fp.isInfinite x6)))
(assert (not (fp.isZero x6)))
(assert (not (fp.isNaN x7)))
(assert (not (fp.isInfinite x7)))
(assert (not (fp.isZero x7)))
(assert (not (fp.isNaN x8)))
(assert (not (fp.isInfinite x8)))
(assert (not (fp.isZero x8)))
(assert (not (fp.isNaN x9)))
(assert (not (fp.isInfinite x9)))
(assert (not (fp.isZero x9)))
(assert (fp.eq (fp.max (fp.add RNE (fp.add RNE (fp.sqrt RNE (fp.abs x8)) (fp.sub RNE (fp.sub RNE x4 x7) (fp.mul RNE x4 (fp.mul RNE x8 x4)))) (fp.div RNE (fp.sub RNE (fp.mul RNE x4 x0) (fp.add RNE x9 x4)) (fp.mul RNE (fp.add RNE x2 x8) (fp.max x2 x7)))) (fp.neg (fp.div RNE (fp.mul RNE (fp.abs x7) (fp.min x3 x0)) (fp.neg (fp.add RNE x0 x9))))) (fp.sub RNE (fp.mul RNE (fp.sqrt RNE (fp.add RNE (fp.add RNE x0 x5) (fp.sqrt RNE x6))) (fp.neg (fp.sqrt RNE (fp.mul RNE x3 (fp.mul RNE x9 x2))))) (fp.sub RNE (fp.sub RNE (fp.sqrt RNE (fp.div RNE x2 x3)) (fp.min (fp.mul RNE x2 x4) (fp.max x5 x3))) (fp.sqrt RNE (fp.sqrt RNE (fp.neg x8)))))))(check-sat)